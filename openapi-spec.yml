info:
  description: The Digicloud API Reference
  title: Digicloud
  version: 1.0.0
openapi: 3.0.2
servers:
  - url: https://api.digicloud.dev/v1/
paths:
  /edge/domains:
    post:
      tags:
        - domain
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DNSDomainSchema'
      responses:
        202:
          description: successful operation
        400:
          description: client did something wrong
      security:
        - Bearer: [ ]
    get:
      tags:
        - domain
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNSDomainListSchema'
        400:
          description: client did something wrong
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}:
    get:
      tags:
        - domain
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNSDomainRetrieveSchema'
        400:
          description: client did something wrong
      security:
        - Bearer: [ ]
    delete:
      tags:
        - domain
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: successful operation
        400:
          description: client did something wrong
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/records:
    post:
      tags:
        - record
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/DNSARecordSchema'
                - $ref: '#/components/schemas/DNSTXTRecordSchema'
                - $ref: '#/components/schemas/DNSCNAMERecordSchema'
                - $ref: '#/components/schemas/DNSMXRecordSchema'
                - $ref: '#/components/schemas/DNSSRVRecordSchema'
      responses:
        202:
          description: successful operation
        404:
          description: item does not exist
      security:
        - Bearer: [ ]
    get:
      tags:
        - record
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNSRecordListSchema'
        404:
          description: item does not exist
      security:
        - Bearer: [ ]
  /edge/domains/{domain_name_id}/ns-records:
    get:
      tags:
        - ns-record
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainNSRecordSchema'
        404:
          description: item does not exist
      security:
        - Bearer: [ ]
  /edge/domains/{domain_name_id}/dnssec:
    get:
      tags:
        - dnssec
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainDNSSECSchema'
        404:
          description: item does not exist
      security:
        - Bearer: [ ]
    patch:
      tags:
        - dnssec
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainDNSSECSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainDNSSECSchema'
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/verify-ns-records:
    get:
      tags:
        - verify-ns-records
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
        404:
          description: item does not exist
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/records/{record_id}:
    get:
      tags:
        - record
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: record_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DNSARecordDetailsSchema'
                  - $ref: '#/components/schemas/DNSTXTRecordDetailsSchema'
                  - $ref: '#/components/schemas/DNSCNAMERecordDetailsSchema'
                  - $ref: '#/components/schemas/DNSMXRecordDetailsSchema'
                  - $ref: '#/components/schemas/DNSSRVRecordDetailsSchema'
        404:
          description: item does not exist
      security:
        - Bearer: [ ]
    patch:
      tags:
        - record
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: record_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/DNSARecordSchema'
                - $ref: '#/components/schemas/DNSTXTRecordSchema'
                - $ref: '#/components/schemas/DNSCNAMERecordSchema'
                - $ref: '#/components/schemas/DNSMXRecordSchema'
                - $ref: '#/components/schemas/DNSSRVRecordSchema'
      responses:
        202:
          description: successful operation
        404:
          description: item does not exist
      security:
        - Bearer: [ ]
    delete:
      tags:
        - record
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: record_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: no content
        404:
          description: item does not exist
      security:
        - Bearer: [ ]

  /edge/domains/domain-check:
    get:
      tags:
        - dnr
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: query
          name: domain
          description: "Domain address like: amirmhp.ir"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/DomainCheckSchema'
        404:
          description: item does not exist
      security:
        - Bearer: [ ]

  /edge/domains/domain-price-list:
    get:
      tags:
        - dnr
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainPriceListSchema'
        404:
          description: item does not exist
      security:
        - Bearer: [ ]

  /edge/domains/domain-register:
    post:
      description: "Register domain"
      tags:
        - dnr
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DomainRegisterBodySchema'
      responses:
        201:
          description: successful operation
      security:
        - Bearer: [ ]

  /load-balancers/{load_balancer_id}/backends/{backend_id}/health_checks:
    post:
      description: "Create a health check for the specified backend."
      tags:
        - loadbalancer
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: load_balancer_id
          required: true
          schema:
            type: string
        - in: path
          name: backend_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/HealthCheckSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckSchema'
      security:
        - Bearer: [ ]
    get:
      description: "get list of health checks for the specified backend."
      tags:
        - loadbalancer
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: load_balancer_id
          required: true
          schema:
            type: string
        - in: path
          name: backend_id
          required: true
          schema:
            type: string
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthCheckSchema'
      security:
        - Bearer: [ ]

  /load-balancers/{load_balancer_id}/backends/{backend_id}/health-checks/{health_check_id}:
    delete:
      tags:
        - loadbalancer
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: load_balancer_id
          required: true
          schema:
            type: string
        - in: path
          name: backend_id
          required: true
          schema:
            type: string
        - in: path
          name: health_check_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: no content
        404:
          description: item does not exist
      security:
        - Bearer: [ ]

  /load-balancers/{load_balancer_id}/backends/{backend_id}/members:
    post:
      description: "Add members to backend."
      tags:
        - loadbalancer
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: load_balancer_id
          required: true
          schema:
            type: string
        - in: path
          name: backend_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BackendMemberSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackendMemberSchema'
      security:
        - Bearer: [ ]
    get:
      description: "list a backend members."
      tags:
        - loadbalancer
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: load_balancer_id
          required: true
          schema:
            type: string
        - in: path
          name: backend_id
          required: true
          schema:
            type: string
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackendMemberSchema'
      security:
        - Bearer: [ ]
  /load-balancers/{load_balancer_id}/backends/{backend_id}/member/{member_id}:
    delete:
      description: "delete a member from backend."
      tags:
        - loadbalancer
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: load_balancer_id
          required: true
          schema:
            type: string
        - in: path
          name: backend_id
          required: true
          schema:
            type: string
        - in: path
          name: member_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: no content
        404:
          description: item does not exist
      security:
        - Bearer: [ ]

  /load-balancers/{load_balancer_id}/backends:
    post:
      description: "Create a backend."
      tags:
        - loadbalancer
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: load_balancer_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackendSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackendSchema'
      security:
        - Bearer: [ ]
    get:
      description: "list backends."
      tags:
        - loadbalancer
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: load_balancer_id
          required: true
          schema:
            type: string
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackendSchema'
      security:
        - Bearer: [ ]

  /load-balancers/{load_balancer_id}/backends/{backend_id}:
    delete:
      description: "delete a backend from the specified load balancer."
      tags:
        - loadbalancer
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: load_balancer_id
          required: true
          schema:
            type: string
        - in: path
          name: backend_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: no content
        404:
          description: item does not exist
      security:
        - Bearer: [ ]

  /load-balancers/{load_balancer_id}/frontends:
    post:
      description: "Create a frontend."
      tags:
        - loadbalancer
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: load_balancer_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrontendSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrontendSchema'
      security:
        - Bearer: [ ]
    get:
      description: "list frontends."
      tags:
        - loadbalancer
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: load_balancer_id
          required: true
          schema:
            type: string
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FrontendSchema'
      security:
        - Bearer: [ ]

  /load-balancers/{load_balancer_id}/frontends/{frontend_id}:
    delete:
      description: "delete a frontend from the specified load balancer."
      tags:
        - loadbalancer
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: load_balancer_id
          required: true
          schema:
            type: string
        - in: path
          name: frontend_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: no content
        404:
          description: item does not exist
      security:
        - Bearer: [ ]
    patch:
      description: "update a frontend from the specified load balancer."
      tags:
        - loadbalancer
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: load_balancer_id
          required: true
          schema:
            type: string
        - in: path
          name: frontend_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrontendUpdateSchema'
      responses:
        200:
          description: successful update
        404:
          description: item does not exist
      security:
        - Bearer: [ ]
  /load-balancers:
    post:
      tags:
        - loadbalancer
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/LoadBalancerSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancerSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - loadbalancer
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoadBalancerSchema'
      security:
        - Bearer: [ ]
  /load-balancers/{load_balancer_id}:
    get:
      tags:
        - loadbalancer
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: load_balancer_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancerSchema'
        404:
          description: item does not exist
      security:
        - Bearer: [ ]
    patch:
      summary: "Edit a loadbalancer"
      description: "only name and description are editable."
      tags:
        - loadbalancer
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: load_balancer_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadBalancerSchema'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancerSchema'
        404:
          description: item does not exist
      security:
        - Bearer: [ ]
    delete:
      tags:
        - loadbalancer
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: load_balancer_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: no content
        404:
          description: item does not exist
      security:
        - Bearer: [ ]

  /audit-logs:
    get:
      tags:
        - audit-log
      operationId: AuditLog.List
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: query
          name: count
          description: "number of items per response"
          required: false
          schema:
            type: integer
            default: 25
        - in: query
          name: cursor
          description: "pagination cursor"
          required: false
          schema:
            type: string
        - in: query
          description: "filter logs before this date exclusive, e.g: before=2021-06-07T13:55:33"
          name: before
          required: false
          schema:
            type: string
        - in: query
          description: "filter logs after this date exclusive, e.g: after=2021-06-07T13:55:33"
          name: after
          required: false
          schema:
            type: string
        - in: query
          description: "filter based on user, user may or may not be a member of this namespace"
          name: user_id
          required: false
          schema:
            type: string
        - in: query
          name: object_id
          required: false
          schema:
            type: string
        - in: query
          name: object_type
          required: false
          schema:
            type: string
            enum:
              - iaas.instance
              - iaas.volume
              - iaas.network
              - iaas.subnet
              - iaas.fip
              - iaas.router
              - iaas.externalvpn
              - iaas.securitygroup
              - edge.domain
              - edge.record
      responses:
        200:
          description: List of audit-logs
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/CursorPaginationContainer'
                  - properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/AuditLog'
  /early-access-request:
    post:
      tags:
        - early-access-request
      operationId: EarlyAccessRequest.Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarlyAccessRequestSchema'
      responses:
        201:
          description: early access created
        400:
          description: alreay exist

  /oss/locations:
    get:
      tags:
        - location
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationSchema'
      security:
        - Bearer: [ ]

  /oss/buckets:
    post:
      tags:
        - bucket
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BucketDetailSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketDetailSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - bucket
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BucketSchema'
      security:
        - Bearer: [ ]
  /oss/buckets/{bucket_name_or_id}:
    patch:
      tags:
        - bucket
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: bucket_name_or_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                access_type:
                  type: string
                  enum:
                    - private
                    - public-read
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketDetailSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - bucket
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: bucket_name_or_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BucketDetailSchema'
      security:
        - Bearer: [ ]
    delete:
      tags:
        - bucket
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "header"
          name: "Digicloud-Region"
          required: true
          schema:
            type: string
        - in: path
          name: bucket_name_or_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: successful operation
      security:
        - Bearer: [ ]

  /namespace-search:
    get:
      tags:
        - search
      parameters:
        - $ref: "#/components/parameters/PaginationCount"
        - $ref: "#/components/parameters/PaginationPage"
        - $ref: "#/components/parameters/FilterQuery"
      responses:
        200:
          description: List of namespace objects
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/PaginationContainer'
                  - properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Object'
        401:
          description: "Unauthorized"

  /oss/buckets/{bucket_name_or_id}/access-keys:
    post:
      tags:
        - access-key
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: bucket_name_or_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessKeySchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/AccessKeySchema'
                  - properties:
                      secret_key:
                        type: string
                        readOnly: true
      security:
        - Bearer: [ ]
    get:
      tags:
        - access-key
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: bucket_name_or_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessKeySchema'
      security:
        - Bearer: [ ]
  /oss/buckets/{bucket_name_or_id}/access-key/{access_key}:
    patch:
      tags:
        - access-type
      description: For now access_type, name and is_active is updateable.
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: bucket_name_or_id
          required: true
          schema:
            type: string
        - in: path
          name: access_key
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessKeySchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeySchema'
      security:
        - Bearer: [ ]
    delete:
      tags:
        - access_key
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: bucket_name_or_id
          required: true
          schema:
            type: string
        - in: path
          name: access_key
          required: true
          schema:
            type: string
      responses:
        204:
          description: successful operation
      security:
        - Bearer: [ ]


  /oss/access-keys:
    post:
      tags:
        - namespace_access_key
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceAccessKeySchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - namespace_access_key
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NamespaceAccessKeySchema'
      security:
        - Bearer: [ ]
  /oss/access-keys/{access_key_id}:

    delete:
      tags:
        - namespace_access_key
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: access_key_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: successful operation

  /oss/s3_actions:
    get:
      tags:
        - S3_Actions
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /oss/policies:
    post:
      tags:
        - oss_policy
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicySchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicySchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - oss_policy
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicySchema'
      security:
        - Bearer: [ ]
  /oss/policies/{policy_id}:
    patch:
      tags:
        - oss_policy
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "path"
          name: "policy_id"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicySchema'

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicySchema'
    get:
      tags:
        - oss_policy
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "path"
          name: "policy_id"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicySchema'
    delete:
      tags:
        - oss_policy
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "path"
          name: "policy_id"
          required: true
          schema:
            type: string
      responses:
        204:
          description: successful operation

  /oss/policies/statements/{statement_id}:
    patch:
      tags:
        - oss_policy
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "path"
          name: "statement_id"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyStatementSchema'

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyStatementSchema'
    get:
      tags:
        - oss_policy
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "path"
          name: "statement_id"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyStatementSchema'
    delete:
      tags:
        - oss_policy
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "path"
          name: "statement_id"
          required: true
          schema:
            type: string
      responses:
        204:
          description: successful operation
  /oss/buckets/{bucket_id}/policies:
    get:
      tags:
        - oss_policy
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "path"
          name: "bucket_id"
          required: true
          schema:
            type: string

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicySchema'
      security:
        - Bearer: [ ]
  /oss/access_keys/{access_key_id}/policies:
    get:
      tags:
        - oss_policy
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "path"
          name: "access_key_id"
          required: true
          schema:
            type: string

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicySchema'
      security:
        - Bearer: [ ]

    post:
      tags:
        - oss_policy
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: "path"
          name: "access_key_id"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                policy_ids:
                  type: array
                  items:
                    type: string
      responses:
        201:
          description: successful operation
      security:
        - Bearer: [ ]
  /edge/domains/{domain_name_id}/upstreams:
    post:
      tags:
        - upstream
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpstreamSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpstreamSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - upstream
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/UpstreamSchema'
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/upstreams/{upstream_name_id}:
    patch:
      tags:
        - upstream
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: upstream_name_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpstreamSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpstreamSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - upstream
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: upstream_name_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpstreamSchema'
      security:
        - Bearer: [ ]
    delete:
      tags:
        - upstream
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: upstream_name_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: successful operation
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/upstreams/{upstream_name_id}/servers:
    post:
      tags:
        - upstream-server
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: upstream_name_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpstreamServerSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpstreamServerSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - upstream-server
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: upstream_name_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/UpstreamServerSchema'
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/upstreams/{upstream_name_id}/servers/{server_id}:
    patch:
      tags:
        - upstream-server
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: upstream_name_id
          required: true
          schema:
            type: string
        - in: path
          name: server_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpstreamServerSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpstreamServerSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - upstream-server
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: upstream_name_id
          required: true
          schema:
            type: string
        - in: path
          name: server_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpstreamServerSchema'
      security:
        - Bearer: [ ]
    delete:
      tags:
        - upstream-server
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: upstream_name_id
          required: true
          schema:
            type: string
        - in: path
          name: server_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: successful operation
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/ssl:
    patch:
      tags:
        - ssl
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSLSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSLSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - ssl
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SSLSchema'
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/locations:
    post:
      tags:
        - edge-location
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CDNLocationSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CDNLocationSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - edge-location
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/CDNLocationSchema'
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/locations/{location_name_id}:
    patch:
      tags:
        - edge-location
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: location_name_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CDNLocationSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CDNLocationSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - edge-location
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: location_name_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CDNLocationSchema'
      security:
        - Bearer: [ ]
    delete:
      tags:
        - edge-location
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: location_name_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: successful operation
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/firewalls:
    post:
      tags:
        - edge-firewall
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CDNFirewallSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CDNFirewallSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - edge-firewall
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CDNFirewallSchema'
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/firewalls/{firewall_id}:
    patch:
      tags:
        - edge-firewall
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: firewall_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CDNFirewallSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CDNFirewallSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - edge-firewall
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: firewall_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CDNFirewallSchema'
      security:
        - Bearer: [ ]
    delete:
      tags:
        - edge-firewall
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: firewall_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: successful operation
      security:
        - Bearer: [ ]

  /edge/cache-zones:
    get:
      tags:
        - cache-zones
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CacheZoneSchema'
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/general-setting:
    patch:
      tags:
        - general-setting
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneralSettingSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSettingSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - general-setting
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralSettingSchema'
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/purge-cache:
    post:
      tags:
        - purge-cache
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurgeCacheSchema'
      responses:
        202:
          description: successful operation
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/rate-limits:
    post:
      tags:
        - rate-limit
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateLimitSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - rate-limit
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/RateLimitSchema'
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/rate-limits/{rate_limit_name_id}:
    patch:
      tags:
        - rate-limit
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: rate_limit_name_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateLimitSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - rate-limit
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: rate_limit_name_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RateLimitSchema'
      security:
        - Bearer: [ ]
    delete:
      tags:
        - rate-limit
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: rate_limit_name_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: successful operation
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/watermarks:
    post:
      tags:
        - watermarks
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WaterMarkSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaterMarkSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - watermarks
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/WaterMarkSchema'
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/watermarks/{watermark_id}:
    get:
      tags:
        - watermarks
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: watermark_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WaterMarkSchema'
      security:
        - Bearer: [ ]
    delete:
      tags:
        - watermarks
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: watermark_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: successful operation
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/image-process:
    post:
      tags:
        - image-process
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageProcessSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageProcessSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - image-process
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/ImageProcessSchema'
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/image-process/{image_process_id}:
    patch:
      tags:
        - image-process
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: image_process_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageProcessSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageProcessSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - image-process
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: image_process_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageProcessSchema'
      security:
        - Bearer: [ ]
    delete:
      tags:
        - image-process
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: image_process_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: successful operation
      security:
        - Bearer: [ ]
  /edge/domains/{domain_name_id}/waf-packages:
    get:
      tags:
        - WAF
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: string
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/waf-rules:
    post:
      tags:
        - WAF
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WAFRuleSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WAFRuleSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - WAF
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WAFRuleSchema'
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/waf-rules/{rule_id}:
    patch:
      tags:
        - WAF
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: rule_id
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WAFRuleSchema'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WAFRuleSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - WAF
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: rule_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WAFRuleSchema'
      security:
        - Bearer: [ ]
    delete:
      tags:
        - WAF
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: rule_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: successful operation
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/waf-rules/{rule_id}/config:
    patch:
      tags:
        - WAF
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: rule_id
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WAFRuleConfigSchema'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WAFRuleConfigSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - WAF
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: rule_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WAFRuleConfigSchema'
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/waf-whitelists:
    post:
      tags:
        - WAF
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WAFWhitelistSchema'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WAFWhitelistSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - WAF
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WAFWhitelistSchema'
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/waf-whitelists/{whitelist_id}:
    patch:
      tags:
        - WAF
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: whitelist_id
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WAFWhitelistSchema'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WAFWhitelistSchema'
      security:
        - Bearer: [ ]
    get:
      tags:
        - WAF
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: whitelist_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WAFWhitelistSchema'
      security:
        - Bearer: [ ]
    delete:
      tags:
        - WAF
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: whitelist_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: successful operation
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/waf-settings:
    get:
      tags:
        - WAF
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WAFSettingSchema'
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/waf-setting/{setting_id}:
    patch:
      tags:
        - WAF
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
        - in: path
          name: setting_id
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WAFSettingSchema'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WAFSettingSchema'
      security:
        - Bearer: [ ]

  /edge/packages:
    get:
      tags:
        - edge
        - package
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageDomainPackageListSchema'
      security:
        - Bearer: [ ]

  /edge/domains/{domain_name_id}/packages:
    patch:
      tags:
        - edge
        - package
      parameters:
        - in: path
          name: domain_name_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeDomainPackageSchema'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNSDomainRetrieveSchema'
      security:
        - Bearer: [ ]

  /pricing/edge-packages:
    get:
      tags:
        - pricing-instances
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: query
          name: valid_date
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: start_date
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: end_date
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: package_id
          required: false
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/EdgePackagePriceSchema'
      security:
        - Bearer: [ ]


  /tickets/departments:
    get:
      summary: List ticket departments
      tags:
        - Ticket
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartmentSchema'

  /tickets/departments/{department_id}/products:
    get:
      summary: List ticket products
      tags:
        - Ticket
      parameters:
        - in: path
          required: true
          name: department_id
          schema:
            type: string

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductSchema'

  /tickets/departments/{department_id}/products/{product_id}/subjects:
    get:
      summary: List ticket subjects
      tags:
        - Ticket
      parameters:
        - in: path
          required: true
          name: department_id
          schema:
            type: string
        - in: path
          name: product_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubjectSchema'

  /tickets:
    post:
      summary: Create a ticket
      tags:
        - Ticket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketSchema'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketSchema'

    get:
      summary: List tickets
      tags:
        - Ticket
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketSchema'

  /tickets/{ticket_id}:
    get:
      summary: Get a ticket
      tags:
        - Ticket
      parameters:
        - in: path
          required: true
          name: ticket_id
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketSchema'

  /tickets/{ticket_id}/comments:
    post:
      summary: Create a comment
      tags:
        - Ticket
      parameters:
        - in: path
          required: true
          name: ticket_id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentSchema'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentSchema'

    get:
      summary: List comments
      tags:
        - Ticket
      parameters:
        - in: path
          required: true
          name: ticket_id
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentSchema'

  /tickets/{ticket_id}/feedbacks:
    parameters:
      - name: ticket_id
        in: path
        required: true
        schema:
          type: integer
        description: ID of the ticket

    get:
      summary: Get feedback for a ticket
      tags:
        - Ticket
      description: Retrieve feedback for a specific ticket.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array  # Assuming you retrieve a list of feedback
                items:
                  $ref: '#/components/schemas/TicketFeedback'
        default:
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string

    post:
      summary: Submit feedback for a ticket
      tags:
        - Ticket
      description: Submit feedback for a specific ticket.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketFeedback'
      responses:
        '201':
          description: Feedback submitted successfully
        default:
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string

  /pricing/instances:
    get:
      tags:
        - pricing-instances
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: query
          name: region_id
          required: true
          schema:
            type: string
        - in: query
          name: valid_date
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: start_date
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: end_date
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: instance_type_id
          required: false
          schema:
            type: string
        - in: query
          name: instance_state
          required: false
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/InstancePriceSchema'
      security:
        - Bearer: [ ]

  /pricing/volumes:
    get:
      tags:
        - pricing-volumes
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: query
          name: region_id
          required: true
          schema:
            type: string
        - in: query
          name: valid_date
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: start_date
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: end_date
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: volume_type
          required: false
          schema:
            type: string
        - in: query
          name: base_price
          required: false
          schema:
            type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/VolumePriceSchema'
      security:
        - Bearer: [ ]

  /pricing/snapshots:
    get:
      tags:
        - pricing-snapshots
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: query
          name: region_id
          required: true
          schema:
            type: string
        - in: query
          name: valid_date
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: start_date
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: end_date
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: volume_type
          required: false
          schema:
            type: string
        - in: query
          name: base_price
          required: false
          schema:
            type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/VolumePriceSchema'
      security:
        - Bearer: [ ]


  /pricing/public-ips:
    get:
      tags:
        - pricing-pulic-ips
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: query
          name: region_id
          required: true
          schema:
            type: string
        - in: query
          name: valid_date
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: start_date
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: end_date
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: public_ip_state
          required: false
          schema:
            type: string
        - in: query
          name: public_ip_id
          required: false
          schema:
            type: string
        - in: query
          name: base_price
          required: false
          schema:
            type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/PublicIpPriceSchema'
      security:
        - Bearer: [ ]

  /pricing/vpns:
    get:
      tags:
        - pricing-vpns
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: query
          name: region_id
          required: true
          schema:
            type: string
        - in: query
          name: valid_date
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: start_date
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: end_date
          required: false
          schema:
            type: string
            format: datetime
        - in: query
          name: vpn_connection_state
          required: false
          schema:
            type: string
        - in: query
          name: vpn_connection_id
          required: false
          schema:
            type: string
        - in: query
          name: base_price
          required: false
          schema:
            type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/VpnConnectionPriceSchema'
      security:
        - Bearer: [ ]

  /pricing/discounts:
    get:
      tags:
        - pricing-discount
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
        - in: query
          name: region_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/DiscountSchema'
      security:
        - Bearer: [ ]

  /billing/usage-reports:
    post:
      tags:
        - billing-usage-report
      parameters:
        - in: "header"
          name: "Digicloud-Namespace"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsageReportSchema'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/UsageReportResponseSchema'
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/request-analysis/stats":
    get:
      tags:
        - edge
          - laas-metrics
          - request-analysis
      summary: Get All Stats
      description: |-
        Return in number of total requests and total traffic based on the time_frame

        The data is collected `cdn_metrics_nginx_access_all_cache` datasource
      operationId: get_stats_all_v1_request_analysis_all_stats_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RequestAnalysisSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/request-analysis/cache/stats":
    get:
      tags:
        - edge
          - laas-metrics
          - request-analysis
      summary: Get Stats Per Cache
      description: |-
        Return the number of requests based on the `cache` field within a certain period of time.

        The data is collected `cdn_metrics_nginx_access_all_client_ip` datasource

        Note: `bypass` keyword is equal to empty cache type
      operationId: get_stats_per_cache_v1_request_analysis_cache_stats_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: true
          schema:
            title: Cache Type
            type: string
          name: cache_type
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RequestAnalysisCacheSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/request-analysis/client/stats":
    get:
      tags:
        - edge
          - laas-metrics
          - request-analysis
      summary: Get Client Count
      description: |-
        Retrieve the count of unique users within a specified time range.

        The data is collected `cdn_metrics_nginx_access_all_client_ip` datasource
      operationId: get_client_count_v1_request_analysis_client_stats_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RequestAnalysisClientSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/request-analysis/organization/stats":
    get:
      tags:
        - edge
          - laas-metrics
          - request-analysis
      summary: Get Stats Per Organization
      description: |-
        Return number of total requests and total traffic per each organization

        The data is collected from  `cdn_metrics_nginx_access_all_organization` datasource
      operationId: get_stats_per_organization_v1_request_analysis_organization_stats_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: Count
            maximum: 200
            minimum: 1
            type: integer
            default: 10
          name: count
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RequestAnalysisOrganizationSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/geomap/countries-traffic":
    get:
      tags:
        - edge
          - laas-metrics
          - geomap
      summary: Get Client Count Per Country
      description: |-
        Return the number of requests and their corresponding traffic generated by country, without considering unique users.

        The data is collected from `cdn_metrics_nginx_access_all_country` datasource
      operationId: get_client_count_per_country_v1_geomap_countries_traffic_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: Count
            maximum: 200
            minimum: 1
            type: integer
            default: 10
          name: count
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeomapCountrySchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/log-analysis/waf/stats":
    get:
      tags:
        - edge
          - laas-metrics
          - log-analysis
      summary: Get Waf Logs Stats
      description: |-
        Return the count of WAF (Web Application Firewall) logs based on the `host` field.

        The data is collected `cdn_metrics_waf` datasource
      operationId: get_waf_logs_stats_v1_log_analysis_waf_stats_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LogAnalysisStatsSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/log-analysis/waf/logs":
    get:
      tags:
        - edge
          - laas-metrics
          - log-analysis
      summary: Get List Waf Logs
      description: |-
        Return the WAF (Web Application Firewall) logs messages based on the `host` field.

        The data is collected `cdn_metrics_waf` datasource
      operationId: get_list_waf_logs_v1_log_analysis_waf_logs_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: Page
            maximum: 20
            minimum: 1
            type: integer
            default: 1
          name: page
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 1
            type: integer
            default: 10
          name: limit
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LogAnalysisWafSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/log-analysis/waap/stats":
    get:
      tags:
        - edge
          - laas-metrics
          - log-analysis
      summary: Get Waap Logs Stats
      description: |-
        Return the count of WAAP (Web App and API Protection) logs based on the `host` field.

        The data is collected `cdn_metrics_waap` datasource
      operationId: get_waap_logs_stats_v1_log_analysis_waap_stats_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"

      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LogAnalysisStatsSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/log-analysis/waap/logs":
    get:
      tags:
        - edge
          - laas-metrics
          - log-analysis
      summary: Get List Waap Logs
      description: |-
        Return the WAAP (Web App and API Protection) logs based on the `host` field.

        The data is collected `cdn_metrics_waap` datasource
      operationId: get_list_waap_logs_v1_log_analysis_waap_logs_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: Page
            maximum: 20
            minimum: 1
            type: integer
            default: 1
          name: page
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 1
            type: integer
            default: 10
          name: limit
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LogAnalysisWaapSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/log-analysis/proxy-core-errors/stats":
    get:
      tags:
        - edge
          - laas-metrics
          - log-analysis
      summary: Get Proxy Core Errors Stats
      description: |-
        Return the count of `proxy core` logs based on the `host` field.

        The data is collected `cdn_metrics_proxy_core_error_edge` datasource
      operationId: get_proxy_core_errors_stats_v1_log_analysis_proxy_core_errors_stats_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LogAnalysisStatsSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/log-analysis/proxy-core-errors/logs":
    get:
      tags:
        - edge
          - laas-metrics
          - log-analysis
      summary: Get List Proxy Core Errors
      description: |-
        Return the `proxy core` logs based on the `host` field.

        The data is collected `cdn_metrics_proxy_core_error_edge` datasource
      operationId: get_list_proxy_core_errors_v1_log_analysis_proxy_core_errors_logs_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: Page
            maximum: 20
            minimum: 1
            type: integer
            default: 1
          name: page
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 1
            type: integer
            default: 10
          name: limit
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LogAnalysisProxyCoreErrorSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/state-analysis/status-codes":
    get:
      tags:
        - edge
          - laas-metrics
          - state-analysis
      summary: Get Status Codes Per Host
      description: |-
        Return the number of responses/traffic based on the status code

        The data is collected from `cdn_metrics_nginx_access_all_status` datasource
      operationId: get_status_codes_per_host_v1_state_analysis_status_codes_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StateAnalysisStatusCodesSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/state-analysis/upstream-status-codes":
    get:
      tags:
        - edge
          - laas-metrics
          - state-analysis
      summary: Get Upstream Status Codes Per Host
      description: |-
        Return the number of responses/traffic based on the status code for `upstream`

        The data is collected from `cdn_metrics_nginx_access_all_upstream_status` datasource
      operationId: get_upstream_status_codes_per_host_v1_state_analysis_upstream_status_codes_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StateAnalysisUpstreamStatusCodesSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/state-analysis/response-time":
    get:
      tags:
        - edge
          - laas-metrics
          - state-analysis
      summary: Get Response Time
      operationId: get_response_time_v1_state_analysis_response_time_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StateAnalysisResponseTimeSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/state-analysis/request-time":
    get:
      tags:
        - edge
          - laas-metrics
          - state-analysis
      summary: Get Request Time
      operationId: get_request_time_v1_state_analysis_request_time_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StateAnalysisRequestTimeSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/dns/count-dns-requests":
    get:
      tags:
        - edge
          - laas-metrics
          - dns
      summary: Get Count Dns Requests
      description: |-
        Return the total request count based on grouping by two fields `domain` and `__time`

        The data is collected from `cdn_metrics_pdns` datasource
      operationId: get_count_dns_requests_v1_dns_count_dns_requests_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DNSCountRequestsSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/traffic/total":
    get:
      tags:
        - edge
          - laas-metrics
          - traffic
      summary: Get Traffics
      description: |-
        Calculate and return the total traffic by summing the values of the `size_set` and `request_length` fields in this API.

        The data is collected from `cdn_metrics_nginx_access_all_traffic` datasource
      operationId: get_traffics_v1_traffic_total_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TrafficTotalSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/traffic/request-length":
    get:
      tags:
        - edge
          - laas-metrics
          - traffic
      summary: Get Total Request Length
      description: |-
        Calculate and return the total request_length by summing the values of the `request_length` field in this API.

        The data is collected from `cdn_metrics_nginx_access_all_traffic` datasource
      operationId: get_total_request_length_v1_traffic_request_length_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TrafficRequestLengthSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/traffic/size-sent":
    get:
      tags:
        - edge
          - laas-metrics
          - traffic
      summary: Get Total Size Sent
      description: |-
        Calculate and return the total size_sent by summing the values of the `size_sent` field in this API.

        The data is collected from `cdn_metrics_nginx_access_all_traffic` datasource
      operationId: get_total_size_sent_v1_traffic_size_sent_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TrafficSizeSentSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/traffic/upstream/total":
    get:
      tags:
        - edge
          - laas-metrics
          - traffic
      summary: Get Total Upstream
      description: |-
        Calculate and return the total traffic between the `upstream origin server` and `CDN edge node` by summing the values of the `upstream_bytes_sent` and `upstream_bytes_received` fields in this API.

        The data is collected from `cdn_metrics_nginx_access_all_traffic` datasource
      operationId: get_total_upstream_v1_traffic_upstream_total_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TrafficUpstreamTotalSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/traffic/upstream/bytes-received":
    get:
      tags:
        - edge
          - laas-metrics
          - traffic
      summary: Get Total Upstream Bytes Received
      description: |-
        Calculate and return the total upstream_bytes_received between the `upstream origin server` and `CDN edge node`  by summing the values of the `upstream_bytes_received` field in this API.

        The data is collected from `cdn_metrics_nginx_access_all_traffic` datasource
      operationId: get_total_upstream_bytes_received_v1_traffic_upstream_upstream_bytes_received_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TrafficUpstreamBytesReceivedSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/metrics/traffic/upstream/bytes-sent":
    get:
      tags:
        - edge
          - laas-metrics
          - traffic
      summary: Get Total Upstream Bytes Sent
      description: |-
        Calculate and return the total upstream_bytes_sent between the `upstream origin server` and `CDN edge node` by summing the values of the `upstream_bytes_sent` field in this API.

        The data is collected from `cdn_metrics_nginx_access_all_traffic` datasource
      operationId: get_total_upstream_bytes_sent_v1_traffic_upstream_upstream_bytes_sent_get
      parameters:
        - required: true
          schema:
            title: Domain Names
            type: string
          name: domain_names
          in: query
        - required: true
          schema:
            "$ref": "#/components/schemas/TimeFramesEnum"
          name: time_frame
          in: query
        - required: false
          schema:
            title: "All"
            type: boolean
            default: false
          name: "is_all"
          in: "query"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TrafficUpstreamBytesSentSchema"
      security:
        - Bearer: [ ]

  "/edge/laas/pipelines/":
    get:
      tags:
        - edge
          - laas-orchestration
          - pipeline
      summary: Get Pipelines
      description: |
      operationId: get_pipelines_v1_pipelines__get
      parameters:
        - required: true
          schema:
            title: Domain Id
            type: string
          name: domain_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetPipelines200"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - Bearer: [ ]
    post:
      tags:
        - edge
          - laas-orchestration
          - pipeline
      summary: Create Pipeline
      description: |2+
        test

      operationId: create_pipeline_v1_pipelines__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineInputSchema'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreatePipeline200"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

      security:
        - Bearer: [ ]
  /edge/laas/pipelines/topics:
    get:
      tags:
        - edge
          - laas-orchestration
          - pipeline
      summary: Get Topics
      operationId: get_topics_v1_pipelines_topics_get
      parameters:
        - required: true
          schema:
            title: Domain Id
            type: string
          name: domain_id
          in: query

      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetTopics200"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

      security:
        - Bearer: [ ]
  /edge/laas/pipelines/topics/{topic_id}:
    get:
      tags:
        - edge
          - laas-orchestration
          - pipeline
      summary: Get Topics
      operationId: get_topics_v1_pipelines_topics__topic_id__get
      parameters:
        - required: true
          schema:
            title: Topic Id
            type: string
          name: topic_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetTopic200"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

      security:
        - Bearer: [ ]
  /edge/laas/pipelines/source-type:
    get:
      tags:
        - edge
          - laas-orchestration
          - pipeline
      summary: Source Type List
      operationId: source_type_list_v1_pipelines_source_type_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PipelineSourceTypeList200"

      security:
        - Bearer: [ ]


  /edge/laas/pipelines/forwarding-destination-type:
    get:
      tags:
        - edge
          - laas-orchestration
          - pipeline
      summary: Forwarding Destination Type
      operationId: forwarding_destination_type_v1_pipelines_forwarding_destination_type_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PipelineForwardingDestinationTypeList200"

      security:
        - Bearer: [ ]

  /edge/laas/pipelines/destination-type:
    get:
      tags:
        - edge
          - laas-orchestration
          - pipeline
      summary: Destination Type List
      operationId: destination_type_list_v1_pipelines_destination_type_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PipelineDestinationTypeList200"

      security:
        - Bearer: [ ]
  /edge/laas/pipelines/{pipeline_id}:
    get:
      tags:
        - edge
          - laas-orchestration
          - pipeline
      summary: Get Pipeline
      description: This API returns the details of a pipeline
      operationId: get_pipeline_v1_pipelines__pipeline_id__get
      parameters:
        - required: true
          schema:
            title: Pipeline Id
            type: string
          name: pipeline_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetPipeline200"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

      security:
        - Bearer: [ ]
  /edge/laas/pipelines/{pipeline_id}/topic-creating:
    post:
      tags:
        - edge
          - laas-orchestration
          - pipeline
      summary: Topic Creating
      description: |

        Using this API, you can create a topic for your pipeline
      operationId: topic_creating_v1_pipelines_topic_creating_post
      parameters:
        - required: true
          schema:
            title: Pipeline Id
            type: string
          name: pipeline_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineTopicCreatingSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TopicCreating200"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

      security:
        - Bearer: [ ]
  /edge/laas/pipelines/{pipeline_id}/topic-exists:
    post:
      tags:
        - edge
          - laas-orchestration
          - pipeline
      summary: Topic Exists
      description: |

        If your pipeline is **TopicExists** type, you can use this API to assign one of the existing topics to it.
      operationId: topic_exists_v1_pipelines_topic_exists_post
      parameters:
        - required: true
          schema:
            title: Pipeline Id
            type: string
          name: pipeline_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineTopicExistsSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

      security:
        - Bearer: [ ]

  /edge/laas/pipelines/{pipeline_id}/fluent-bit:
    post:
      tags:
        - edge
          - laas-orchestration
          - pipeline
      summary: Fluent Bit
      description: |

        If your pipeline is **socket** type, you can use this API to configure the following two tools.
        - FluentBit
        - HAProxy
      operationId: fluent_bit_v1_pipelines_fluent_bit_post
      parameters:
        - required: true
          schema:
            title: Pipeline Id
            type: string
          name: pipeline_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineFluentBitSchema'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

      security:
        - Bearer: [ ]
  /edge/laas/pipelines/{pipeline_id}/check-message:
    post:
      tags:
        - edge
          - laas-orchestration
          - pipeline
      summary: Check Message
      operationId: check_message_v1_pipelines_check_message_post
      parameters:
        - required: true
          schema:
            title: Pipeline Id
            type: string
          name: pipeline_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CheckMessages200"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

      security:
        - Bearer: [ ]
  /edge/laas/pipelines/{pipeline_id}/druid:
    post:
      tags:
        - edge
          - laas-orchestration
          - pipeline
      summary: Submit Druid
      description: |

        If you need to store the data inside the pipeline in **Druid** tool, you can create a data source in Droid using this API.

        The name of the data source and the rest of its configuration must be sent in **JSON** format through the request body.
      operationId: submit_druid_v1_pipelines_submit_druid_post
      parameters:
        - required: true
          schema:
            title: Pipeline Id
            type: integer
          name: pipeline_id
          in: path
        - required: false
          schema:
            title: Hot Retention
            pattern: ^[1-9]*[0-9]*(D){1}$
            type: string
            default: 3D
          name: hot_retention
          in: query
        - required: false
          schema:
            title: Cold Retention
            pattern: ^[1-9]*[0-9]*(D){1}$
            type: string
            default: 7D
          name: cold_retention
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DruidIndexerSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

      security:
        - Bearer: [ ]

  /edge/laas/pipelines/{pipeline_id}/druid/preview:
    post:
      tags:
        - edge
          - laas-orchestration
          - pipeline
      summary: Preview Druid
      description: |

        Test
      operationId: preview_druid_v1_pipelines_preview_druid
      parameters:
        - required: true
          schema:
            title: Pipeline Id
            type: integer
          name: pipeline_id
          in: path
        - required: false
          schema:
            type: string
            default: parser
          name: stage
          in: query
        - required: false
          schema:
            type: string
          name: domain_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DruidPreviewSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

      security:
        - Bearer: [ ]

  /edge/laas/pipelines/{pipeline_id}/connector:
    post:
      tags:
        - edge
          - laas-orchestration
          - pipeline
      summary: Submit Kafka Connect
      description: |

        test
      operationId: submit_kafka_connect_v1_pipelines_submit_connector_post
      parameters:
        - required: true
          schema:
            title: Pipeline Id
            type: integer
          name: pipeline_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitConnectorSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - Bearer: [ ]


  /edge/laas/pipelines/{pipeline_id}/benthos:
    post:
      tags:
        - edge
          - laas-orchestration
          - pipeline
      summary: Setup Benthos
      operationId: setup_benthos_v1_pipelines_setup_benthos_post
      parameters:
        - required: true
          schema:
            title: Pipeline Id
            type: string
          name: pipeline_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenthosLogForwarding'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SetupBenthos200"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - Bearer: [ ]

  /v1/cloud/jwt:
    post:
      tags:
        - edge
          - laas-orchestration
      summary: Get Laas Jwt
      description: |
        Using this API, you can create JWT token .
      operationId: get_jwt_v1_cloud_jwt_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetLaasJWT200"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - Bearer: [ ]

  /clusters/templates:
    get:
      tags:
        - clusters
      summary: List Cluster Templates
      operationId: list_cluster_template
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClusterTemplateSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

    post:
      tags:
        - clusters
      summary: Create Cluster Template
      operationId: create_cluster_template
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterTemplateSchema'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterTemplateSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

  /clusters/templates/{template_id}:
    get:
      tags:
        - clusters
      summary: Get Cluster Template
      operationId: get_cluster_template
      parameters:
        - name: template_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the cluster template to retrieve
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterTemplateSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'


    patch:
      tags:
        - clusters
      summary: Update Cluster Template
      operationId: update_cluster_template
      parameters:
        - name: template_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the cluster template to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterTemplateSchema'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object  # Assuming the response is an object, adjust accordingly
                properties:
                  your_property: # Add your response properties
                    type: string
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

    delete:
      tags:
        - clusters
      summary: Delete Cluster Template
      operationId: delete_cluster_template
      parameters:
        - name: template_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the cluster template to delete
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

  /clusters:
    get:
      tags:
        - clusters
      summary: List Clusters
      operationId: list_clusters
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClusterSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

    post:
      tags:
        - clusters
      summary: Create Cluster
      operationId: create_cluster
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterSchema'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object  # Assuming the response is an object, adjust accordingly
                properties:
                  your_property: # Add your response properties
                    type: string
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

  /clusters/{cluster_id}:
    get:
      tags:
        - clusters
      summary: Get Cluster
      operationId: get_cluster
      parameters:
        - name: cluster_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the cluster to retrieve
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
            $ref: '#/components/schemas/HTTPValidationError'

  /clusters/coes:
    get:
      tags:
        - clusters
      summary: List COEs
      operationId: list_coe
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoeSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

components:
  schemas:
    CursorPaginationContainer:
      properties:
        cursor:
          type: string
        count:
          type: integer
    EmailVerificationFulfillmentSchema:
      type: object
      properties:
        params:
          type: object

    EmailVerificationSchema:
      type: object
      properties:
        email:
          type: string
        scenario:
          type: string
          enum:
            - confirm-user
            - account-recovery
    Notification:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum:
            - read
            - unread
            - removed
        message:
          type: string
        created_at:
          type: string
    NotificationUpdate:
      type: object
      properties:
        status:
          type: string
          enum:
            - read
            - unread
            - removed
    InvoiceSchema:
      type: array
      items:
        type: object
        properties:
          total_price:
            type: integer
          start:
            type: string
          end:
            type: string
          invoice_lines:
            type: array
            items:
              type: object
              properties:
                service_id:
                  type: string
                parameters:
                  type: object
                price_lines:
                  type: array
                  items:
                    type: object
                    properties:
                      price:
                        type: integer
                      start:
                        type: string
                      end:
                        type: string

    AttachVolumeSchema:
      properties:
        id:
          type: string
      required:
        - id
      type: object
    AddSecurityGroup:
      type: object
      properties:
        security_group_ref:
          type: string
      required:
        - security_group_ref

    InstanceTypeSchema:
      properties:
        description:
          type: string
        disk:
          type: integer
        id:
          type: string
        name:
          type: string
        family_en:
          type: string
          readOnly: true
        family_fa:
          type: string
          readOnly: true
        ram:
          type: integer
        vcpus:
          type: integer
      type: object
    PublicIPAssociation:
      type: object
      properties:
        inteface_id:
          type: string
          description: "a UUID of an interface"
    CreatePublicIPSchema:
      type: object
      properties:
        name:
          type: string
    UpdatePublicIPSchema:
      type: object
      properties:
        name:
          type: string
        is_ephemeral:
          type: boolean
    ComputePublicIPSchema:
      properties:
        created_at:
          type: string
        public_ip_address:
          type: string
        port_detail:
          $ref: '#/components/schemas/ComputePublicIPPortDetailsSchema'
        id:
          type: string
        name:
          type: string
        status:
          type: string
        updated_at:
          type: string
        router_id:
          type: string
        is_ephemeral:
          type: boolean
      type: object
    ComputePublicIPPortDetailsSchema:
      properties:
        associated_to:
          type: string
    SSHKeySchema:
      properties:
        finger_print:
          type: string
        name:
          type: string
        public_key:
          type: string
        created_at:
          type: string
          format: datetime
        updated_at:
          type: string
          format: datetime
      type: object
    RouterInfoSchema:
      properties:
        created_at:
          type: string
        description:
          type: string
        has_gateway:
          type: boolean
        gateway_address:
          type: string
        id:
          type: string
        name:
          type: string
        status:
          type: string
        updated_at:
          type: string
      type: object
    RouterInterfacesInfoSchema:
      type: object
      properties:
        id:
          type: string
        network_id:
          type: string
        subnet_id:
          type: string
        admin_state:
          type: string
        status:
          type: string
        ip_address:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
    UpdateRouterInterfaceSchema:
      type: object
      properties:
        admin_state:
          type: string
          enum: [ DOWN, UP ]
    SecurityGroupRuleInfoSchema:
      properties:
        created_at:
          type: string
        description:
          type: string
        direction:
          type: string
        ethertype:
          type: string
        id:
          type: string
        port_range_max:
          type: integer
        port_range_min:
          type: integer
        protocol:
          type: string
        security_group_id:
          type: string
        updated_at:
          type: string
      type: object
    SecurityGroupInfoSchema:
      properties:
        created_at:
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
        security_group_rules:
          items:
            $ref: '#/components/schemas/SecurityGroupRuleInfoSchema'
          type: array
        updated_at:
          type: string
      type: object
    ComputeServerInterfaceSchema:
      properties:
        id:
          type: string
        fixed_ips:
          type: object
        mac_address:
          type: string
        network_id:
          type: string
        port_state:
          type: string
        public_ip:
          type: string
        port_security_enabled:
          type: boolean
        is_external_net:
          type: boolean
      type: object
    ListComputeServerInterfaceSchema:
      allOf:
        - $ref: '#/components/schemas/ComputeServerInterfaceSchema'
        - properties:
            security_groups:
              type: array
              items:
                type: string
          type: object
    PartialUpdateServerInterface:
      properties:
        port_security_enabled:
          type: boolean
        security_groups:
          type: array
          items:
            type: string
        admin_state:
          type: string
          enum: [ DOWN, UP ]
      type: object
    ConsoleSchema:
      type: object
      properties:
        ws_uri:
          type: string
        html_uri:
          type: string
    InstanceResourceSchema:
      properties:
        name:
          type: string
        instance_type:
          type: string
        addressess:
          type: array
          items:
            type: string
        access_ip:
          type: string
        cores:
          type: string
        memory:
          type: string
        disk:
          type: string
        status:
          type: string
        description:
          type: string
    NetworkResourceSchema:
      properties:
        name:
          type: string
        status:
          type: string
    RouterResourceSchema:
      properties:
        name:
          type: string
        status:
          type: string
        ip_address:
          type: array
          items:
            type: string
    VolumeResourceSchema:
      properties:
        name:
          type: string
        status:
          type: string
        volume_type:
          type: string
        size:
          type: integer
    PublicIPResourceSchema:
      properties:
        public_ip_address:
          type: string
        status:
          type: string
    ExternalVPNConnectionResourceSchema:
      properties:
        name:
          type: string
        status:
          type: string
    MetricSchema:
      description: A map of available metric types to metric values
      type: object
      properties:
        metric-type_name:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
              value:
                type: integer
    ServerSchema:
      properties:
        created_at:
          type: string
        instance-type:
          readOnly: true
        id:
          type: string
        key_name:
          type: string
        name:
          type: string
        security_groups:
          type: array
          items:
            type: string
        addressess:
          type: array
          items:
            type: string
        access_ip:
          type: string
        cores:
          type: string
        memory:
          type: string
        status:
          type: string
        type:
          type: string
        updated_at:
          type: string
        description:
          type: string
      type: object
    SubnetInfoSchema:
      properties:
        cidr:
          type: string
        created_at:
          type: string
        description:
          type: string
        gateway_ip:
          type: string
        id:
          type: string
        ip_version:
          type: string
        name:
          type: string
        network:
          type: string
        updated_at:
          type: string
      type: object
    ComputeVolumeSchema:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        created_at:
          type: string
          readOnly: true
        device:
          type: string
          readOnly: true
        id:
          type: string
          readOnly: true
        instance_id:
          type: string
          readOnly: true
        size:
          type: integer
          readOnly: true
        volume_type:
          type: string
          readOnly: true
        status:
          type: string
          enum:
            - in-use
            - available
            - error
            - creating
            - deleting
            - attaching
            - detaching
            - error-deleting
            - maintenance
        bootable:
          type: boolean
    CredentialSchema:
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
      type: object
    TokenSchema:
      type: object
      properties:
        token:
          type: string
        namespaces:
          type: array
          items:
            type: string

    MachineTokenSchema:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        namespace_id:
          type: string
        ips:
          type: array
          items:
            type: string
        role_id:
          type: string
        expiration:
          type: string
        user_id:
          type: string
        created_at:
          type: string
        updated_at:
          type: string

    FirstTimeMachineTokenSchema:
      allOf:
        - $ref: '#/components/schemas/MachineTokenSchema'
        - properties:
            token:
              type: string

    MachineTokenUpdateSchema:
      type: object
      properties:
        title:
          type: string
        role_id:
          type: string
        ips:
          type: array
          items:
            type: string
      required:
        - role_id
        - ips

    MachineTokenCreateSchema:
      allOf:
        - $ref: '#/components/schemas/MachineTokenUpdateSchema'
        - properties:
            expiration:
              type: string
      required:
        - expiration

    EditInstanceSchema:
      properties:
        name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z]+[A-Za-z0-9_]*$
          type: string
        description:
          type: string
        instance_type:
          type: string
      type: object
    GenerateOrAddSSHKeySchema:
      properties:
        name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z]+[A-Za-z0-9_]*$
          type: string
        public_key:
          type: string
      required:
        - name
      type: object
    ImageSchema:
      properties:
        block_device_mapping:
          type: object
        created_at:
          type: string
        id:
          type: string
        name:
          type: string
        owner:
          type: string
        size:
          type: integer
        status:
          type: string
        updated_at:
          type: string
        visibility:
          type: string
      type: object


    CreateSnapshotSchema:
      type: object
      properties:
        instance:
          description: "Instance ID to create snapshot"
          type: string
        name:
          type: string
        description:
          type: string

    SnapshotSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: string
        volume_ids:
          type: array
          items:
            type: string
        updated_at:
          type: string
        created_at:
          type: string
        instance_id:
          type: string
          description: 'instance that the snapshot is created from'

    SnapshotUpdateSchema:
      type: object
      properties:
        name:
          type: string
        description:
          type: string

    InstanceSchema:
      properties:
        instance-type_id:
          type: string
        image_id:
          type: string
        ssh_key_name:
          type: string
        name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z]+[A-Za-z0-9_]*$
          type: string
        network_id:
          type: string
      required:
        - instance-type_id
        - image_id
        - name
        - network_id
      type: object

    InstanceVolume:
      type: object
      properties:
        size:
          type: integer
        volume_type:
          type: string
          default: SSD
          enum:
            - SSD
            - ULTRA_DISK

    CreateInstanceSchema:
      required:
        - flavor_id
        - name
        - network_id
      type: object
      properties:
        flavor_id:
          type: string
        image:
          type: string
        snapshot:
          type: string
        ssh_key_name:
          type: string
        name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z]+[A-Za-z0-9_]*$
          type: string
        network_id:
          type: string
        has_external_network :
          type: boolean
          description: "for simple networking, user can't attach private network in this case"
        root_volume_size:
          type: integer
          description: "optionally user can set the size of root volume"
        root_volume_type:
          type: string
          description: "optionally user can set the type of root volume"
          enum:
            - "SSD"
            - "ULTRA_DISK"
        additional_volumes:
          type: array
          description: "list of integers, each one is a size of an additional volume and volumes type"
          items:
            $ref: '#/components/schemas/AdditionalVolumesSchema'
        has_public_ip:
          type: boolean
        public_ip:
          type: string
          description: "Name or ID of a public IP to be used after instance creation"
        security_groups:
          type: array
          description: "list of security group names"
          items:
            type: string
        description:
          type: string


      example:
        type: advanced
        name: "Master-1"
        flavor_id: "1"
        image: "2"
        ssh_key_name: "John-sshkey"
        network_id: "5"
        security_groups: [ "API-RULES", "DB-RULES" ]
    InstanceGroupSchema:
      type: object
      properties:
        name:
          type: string
        instance_ids:
          type: array
          description: "list of instance IDs"
          items:
            type: string
    InstanceGroupCreateSchema:
      type: object
      properties:
        name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z]+[A-Za-z0-9_]*$
          type: string
        description:
          type: string
        countcount:
          type: integer
        template:
          type: object
          properties:
            type:
              type: string
              enum:
                - simple
                - advanced
            instance_type:
              type: string
            image:
              type: string
            ssh_key_name:
              type: string
            network:
              type: string
            security_groups:
              type: array
              description: "list of security group names"
              items:
                type: string
            additional_volumes:
              type: array
              description: "list of objects, each one is a size of an additional volume and volumes type"
              items:
                $ref: '#/components/schemas/AdditionalVolumesSchema'
    InterfaceSchema:
      properties:
        net_id:
          type: string
      required:
        - net_id
      type: object
    CreateNetworkSchema:
      properties:
        name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z]+[A-Za-z0-9_]*$
          type: string
      required:
        - name
      type: object
    UpdateNetworkSchema:
      properties:
        name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z]+[A-Za-z0-9_]*$
          type: string
        description:
          type: string
        admin_state:
          type: string
          enum: [ DOWN, UP ]
      type: object

    NetworkInfoSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: string
        subnets:
          type: array
          items:
            type: string
        updated_at:
          type: string
        created_at:
          type: string
    TotpSchema:
      type: object
      properties:
        uri:
          type: string

    OtpSchema:
      properties:
        otp:
          type: string
      required:
        - otp
      type: object
    RouterInterfaceSchema:
      properties:
        subnet_id:
          type: string
      required:
        - subnet_id
      type: object
    CreateRouterSchema:
      properties:
        name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z]+[A-Za-z0-9_]*$
          type: string
        description:
          type: string
        has_gateway:
          type: boolean
        admin_state:
          type: string
          enum: [ DOWN, UP ]
        routes:
          type: list
        status:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
      required:
        - name
      type: object
    UpdateRouterSchema:
      properties:
        name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z]+[A-Za-z0-9_]*$
          type: string
        has_gateway:
          type: boolean
        description:
          type: string
        admin_state:
          type: string
          enum: [ DOWN, UP ]

      type: object
    AdditionalVolumesSchema:
      properties:
        size:
          type: integer
        volume_type:
          type: string
        required:
          - size
          - volume_type
        type: object
    RouterStaticRouteSchema:
      properties:
        destination:
          type: string
        nexthop:
          type: string
      required:
        - destination
        - nexthop
      type: object
    CreateSecurityGroupRuleSchema:
      properties:
        direction:
          type: string
        ethertype:
          type: string
        port_range_max:
          type: integer
        port_range_min:
          type: integer
        protocol:
          type: string
        remote_ip_prefix:
          type: string
      required:
        - direction
        - ethertype
      type: object
    CreateSecurityGroupSchema:
      properties:
        name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z]+[A-Za-z0-9_]*$
          type: string
        description:
          type: string
      required:
        - name
      type: object

    StateTransitionSchema:
      properties:
        new_state:
          oneOf:
            - $ref: '#/components/schemas/TransactionStates'
        params:
          $ref: '#/components/schemas/TransactionParams'
      required:
        - new_state
      type: object

    TransactionStates:
      type: string
      enum: [ ACTIVE, SHUTOFF, REBOOT, SUSPENDED, SHELVED ]

    TransactionParams:
      properties:
        reboot_type:
          oneOf:
            - $ref: '#/components/schemas/RebootType'

    RebootType:
      type: string
      enum: [ SOFT, HARD ]
    SubnetSchema:
      properties:
        cidr:
          type: string
        ip_version:
          type: integer
        name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z]+[A-Za-z0-9_]*$
          type: string
        enable_dhcp:
          type: boolean
        gateway_ip:
          type: string
        allocation_pools:
          type: array
          items:
            type: string
        edge_servers:
          type: array
          items:
            type: string
        host_routes:
          type: array
          items:
            $ref: '#/components/schemas/RouterStaticRouteSchema'
      required:
        - cidr
        - ip_version
        - name
      type: object

    CreateSubnetSchema:
      properties:
        cidr:
          type: string
        ip_version:
          type: integer
        subnet_name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z]+[A-Za-z0-9_]*$
          type: string
        enable_dhcp:
          type: boolean
        gateway_ip:
          type: string
        allocation_pools:
          type: array
          items:
            type: string
        edge_servers:
          type: array
          items:
            type: string
        host_routes:
          type: array
          items:
            $ref: '#/components/schemas/RouterStaticRouteSchema'
      required:
        - cidr
        - ip_version
        - subnet_name
      type: object
    UpdateSubnetSchema:
      properties:
        description:
          type: string
        name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z]+[A-Za-z0-9_]*$
          type: string
        gateway_ip:
          type: string
        allocation_pools:
          type: array
          items:
            type: string
        edge_servers:
          type: array
          items:
            type: string
        host_routes:
          type: array
          items:
            $ref: '#/components/schemas/RouterStaticRouteSchema'
      type: object
    UserRegistrationSchema:
      type: object
      properties:
        email:
          format: email
          type: string
        password:
          type: string
        namespace:
          type: string
      required:
        - email
        - password
    PhoneVerificationSchema:
      type: object
      properties:
        pin:
          type: string
          maxLength: 6
          minLength: 6
    UpdateUserSchema:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        national_id:
          type: string
        current_password:
          type: string
        new_password:
          type: string

    UserDetailsSchema:
      type: object
      properties:
        id:
          type: string
        email:
          format: email
          type: string
        last_login_ip:
          type: string
        phone:
          type: string
        status:
          type: string
          enum:
            - "unconfirmed"
            - "confirmed_email"
            - "confirmed_full"
            - "confirmed_phone"
            - "restricted"
            - "deleted"
    ContactInfoSchema:
      type: object
      properties:
        user_id:
          type: string
          description: "it is read-only"
        country:
          type: string
        city:
          type: string
        address:
          type: string
        postal_code:
          type: string
    NamespaceSchema:
      type: object
      properties:
        id:
          nullable: true
          type: string
          description: "it is read-only"
        state:
          nullable: true
          type: string
          description: "is is read-only"
          enum:
            - 'ready'
            - 'deleting'
            - 'deleted'
        name:
          type: string
        description:
          type: string
        members:
          nullable: true
          description: 'it is read-only'
          type: array
          items:
            $ref: "#/components/schemas/MemberSchema"
    RoleSchema:
      type: object
      properties:
        id:
          nullable: false
          type: string
        name:
          nullable: false
          type: string
        description:
          nullable: true
          type: string
        permissions:
          nullable: true
          type: array
          items:
            $ref: "#/components/schemas/PermissionSchema"
    PermissionSchema:
      type: object
      properties:
        name:
          nullable: false
          type: string
    CreateOrganizationSchema:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        website:
          type: string
        economy_code:
          type: string
        registration_number:
          type: string
        logo:
          type: string
        representative_id:
          type: string
    NamespaceMemberSchema:
      type: object
      properties:
        roles:
          type: array
          items:
            type: string
            description: "The ID of the role"
    OrganizationSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        website:
          type: string
        economy_code:
          type: string
        registration_number:
          type: string
        logo:
          type: string
        representative:
          $ref: "#/components/schemas/OrganizationRepresentativeSchema"
        is_confirmed:
          type: boolean
    UpdateOrganizationSchema:
      properties:
        address:
          type: string
        economy_code:
          type: string
        email:
          format: email
          type: string
        identity_number:
          type: string
        industry:
          type: string
        logo:
          type: string
        name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-z]+[a-z0-9_-]*$
          type: string
        phone:
          pattern: ^\+98[1-9][0-9]{9}$|^0[1-9][0-9]{9}$
          type: string
        registration_number:
          type: string
        representative_id:
          type: string
        representative_letter:
          type: string
        website:
          type: string
      type: object
    OrganizationRepresentativeSchema:
      type: object
      properties:
        user_id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
    RegionResources:
      type: object
      properties:
        region_id:
          type: string
        region_name:
          type: string
        resources:
          type: object
          properties:
            instances:
              type: array
              items:
                $ref: "#/components/schemas/InstanceResourceSchema"
            volumes:
              type: array
              items:
                $ref: "#/components/schemas/VolumeResourceSchema"
            networks:
              type: array
              items:
                $ref: "#/components/schemas/NetworkResourceSchema"
            routers:
              type: array
              items:
                $ref: "#/components/schemas/RouterResourceSchema"
            public_ips:
              type: array
              items:
                $ref: "#/components/schemas/PublicIPResourceSchema"
            external_vpns:
              type: array
              items:
                $ref: "#/components/schemas/ExternalVPNConnectionResourceSchema"
    MemberSchema:
      type: object
      properties:
        user_id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string

    NamespaceInvitationsSchema:
      type: object
      properties:
        id:
          type: string
          description: "identifier for invitation"
        invitation_date:
          type: string
        status:
          type: string
          enum:
            - "PENDING"
            - "ACCEPTED"
            - "REJECTED"
        inviter:
          $ref: "#/components/schemas/MemberSchema"
        invitee:
          $ref: "#/components/schemas/MemberSchema"
        invitee_email:
          type: string
        invitee_roles:
          type: array
          items:
          $ref: "#/components/schemas/RoleSchema"


    InvitationsSchema:
      type: object
      properties:
        id:
          type: string
          description: "identifier for invitation"
        invitation_date:
          type: string
        status:
          type: string
          enum:
            - "PENDING"
            - "ACCEPTED"
            - "REJECTED"
        inviter:
          $ref: "#/components/schemas/MemberSchema"
        invitee_email:
          type: string
        invitee_roles:
          type: array
          items:
          $ref: "#/components/schemas/RoleSchema"
        namespace:
          $ref: "#/components/schemas/NamespaceSchema"

    InvitationResponseSchema:
      type: object
      properties:
        status:
          type: string
          enum:
            - "accepted"
            - "rejected"
    CreateInvitationSchema:
      type: object
      properties:
        email:
          description: "Invitee's email address"
          type: string
        roles:
          description: "A list of role IDs"
          type: array
          items:
            description: "The ID of the role to add the user to (acquire from /namespaces/{id}/roles endpoint)"
            type: string
    TransferNamespaceOwnershipSchema:
      type: object
      properties:
        role_ids:
          description: "A list of role IDs"
          type: array
          items:
            description: "The ID of the role"
            type: string

    VolumeSchema:
      properties:
        name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z]+[A-Za-z0-9_]*$
          type: string
        size:
          minimum: 1
          type: integer
        volume_type:
          type: string
          enum:
            - SSD
            - ULTRA_DISK
        description:
          type: string
      required:
        - name
        - size
        - volume_type
      type: object
    UpdateVolumeSchema:
      properties:
        name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z]+[A-Za-z0-9_]*$
          type: string
        description:
          type: string
        size:
          type: integer
          default: 20
      type: object
    BlockStorageVolumeSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        size:
          type: integer
          default: 20
        volume_type:
          type: string
          enum:
            - SSD
            - ULTRA_DISK
        status:
          type: string
        is_root:
          type: boolean
          description: "It's true when the volume is mounted as the root volume in an instance"
        attachments:
          type: object
        updated_at:
          type: string
        created_at:
          type: string
        description:
          type: string
    PaymentInvoiceSchema:
      type: object
      properties:
        factor_number:
          type: integer
        amount:
          type: integer
        namespace_id:
          type: string
        status:
          type: string
          enum:
            - pending
            - successful
        created_at:
          type: string
          format: datetime
    CreatePaymentInvoiceSchema:
      type: object
      properties:
        amount:
          description: "Amount of payment"
          type: integer
        gateway:
          type: string
          enum:
            - SAMAN
            - DIGIPAY
    PaymentInvoiceDetails:
      type: object
      properties:
        factor_number:
          type: integer
        amount:
          type: integer
        namespace_id:
          type: string
        created_at:
          type: string
          format: datetime
        expire_at:
          type: string
          format: datetime
        transaction:
          $ref: "#/components/schemas/TransactionDetails"
      example:
        factor_number: "some-uuid"
        amount: 50000
        namespace_id: "another-uuid"
        created_at: "2021-04-19T14:00:12Z"
        expire_at: "2021-4-19T14:20:12Z"
        transaction:
          id: "transaction-id"
          status: "verifying"
          ipg:
            method: "get"
            url: "https://something.shaparak.felan/bahman"
            data:
              some: "info"
              more: "things"

    TransactionDetails:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum:
            - ready
            - verifying
            - successful
            - failed
            - must_refund
            - failed_to_refund
            - money_refund
        ipg:
          $ref: "#/components/schemas/IPGDetails"
    IPGDetails:
      type: object
      properties:
        method:
          type: string
        url:
          type: string
        data:
          type: object
      example:
        method: "get"
        url: "https://something.shaparak.felan/bahman"
        data:
          some: "info"
          more: "things"
    PaymentTransactionSchema:
      type: object
      properties:
        id:
          type: string
        factor_number:
          type: integer
        bank_gateway:
          type: string
        amount:
          type: integer
        status:
          type: string
        created_at:
          type: string
    CreatePaymentTransactionSchema:
      type: object
      properties:
        gateway:
          description: "Gateway that user want's to pay with it"
          type: string
          enum:
            - SAMAN
            - DIGIPAY
    FinancialSchema:
      type: object
      properties:
        credit:
          description: "Total credit of namespace,  could be positive or negative"
          type: integer
    QuotaListSchema:
      type: array
      description: "List of namespace quota details"
      items:
        properties:
          id:
            type: string
          description:
            type: string
          quota:
            type: integer
          used:
            type: integer
            nullable: true
          resolution:
            type: object
    QuotaRequestListSchema:
      type: array
      description: "List of user's quota requests"
      items:
        properties:
          id:
            type: string
          quota_id:
            type: string
          note:
            type: string
          required_quota:
            type: integer
          status:
            enum: [ 'pending', 'accepted', 'rejected' ]
          created_at:
            type: string
          updated_at:
            type: string
          resolution:
            type: object

    QuotaRequestSchema:
      type: object
      properties:
        quota_id:
          type: string
        required_quota:
          type: integer
        note:
          type: string
          nullable: true
        resolution:
          type: object
          description: "clients should send back the resolution object provided in quota list"
    ErrorSchema:
      type: object
      properties:
        errors:
          type: object
          description: "field_name as the key and list of string as value"
      example:
        errors:
          NON_FIELD: [ 'Not a field specific error, something is wrong with your request generally' ]
          first_name: [ 'your first name is hard to pronounce' ]
          age: [ 'some field might be wrong for more than one reason', 'Like this one' ]
    ExternalVpnConnectionSchema:
      properties:
        admin_state_up:
          type: boolean
        auth_mode:
          readOnly: true
          type: string
        description:
          maxLength: 254
          minLength: 3
          type: string
        dpd:
          readOnly: true
          type: object
        id:
          readOnly: true
          type: string
        updated_at:
          readOnly: true
          type: string
          format: date-time
        created_at:
          readOnly: true
          type: string
          format: date-time
        ike_policy:
          $ref: '#/components/schemas/IKEPolicy'
        initiator:
          enum:
            - response-only
            - bi-directional
          type: string
          default: bi-directional
        ipsec_policy:
          $ref: '#/components/schemas/IPSecPolicy'
        local_endpoint_group:
          $ref: '#/components/schemas/LocalEndpointGroup'
        mtu:
          minimum: 68
          type: integer
        name:
          maxLength: 64
          minLength: 3
          type: string
        peer_address:
          type: string
        peer_endpoint_group:
          $ref: '#/components/schemas/PeerEndpointGroup'
        peer_id:
          type: string
        psk:
          type: string
        status:
          readOnly: true
          type: string
        vpnservice:
          $ref: '#/components/schemas/VPNService'
      required:
        - local_endpoint_group
        - name
        - peer_endpoint_group
        - peer_id
        - psk
        - admin_state_up
      type: object
    IKEPolicy:
      properties:
        auth_algorithm:
          enum:
            - sha1
            - sha256
            - sha384
            - sha512
          type: string
        encryption_algorithm:
          enum:
            - 3des
            - aes-128
            - aes-192
            - aes-256
          type: string
        ike_version:
          enum:
            - v1
            - v2
          type: string
        lifetime:
          maximum: 3600
          minimum: 3
          type: integer
        pfs:
          enum:
            - group2
            - group5
            - group14
          type: string
      type: object
    IPSecPolicy:
      properties:
        auth_algorithm:
          enum:
            - sha1
            - sha256
            - sha384
            - sha512
          type: string
        encapsulation_mode:
          enum:
            - tunnel
            - transport
          type: string
        encryption_algorithm:
          enum:
            - 3des
            - aes-128
            - aes-192
            - aes-256
          type: string
        lifetime:
          $ref: '#/components/schemas/Lifetime'
        pfs:
          enum:
            - group2
            - group5
            - group14
          type: string
        transform_protocol:
          enum:
            - esp
            - ah
            - ah-esp
          type: string
      type: object
    Lifetime:
      properties:
        value:
          maximum: 3600
          minimum: 3
          type: integer
      type: object
    LocalEndpointGroup:
      properties:
        endpoints:
          items:
            format: uuid
            description: A Subnet ID.
            type: string
          type: array
      type: object
      required:
        - endpoints
    PeerEndpointGroup:
      properties:
        endpoints:
          items:
            type: string
            description: A network(cidr) IP address field.
          type: array
      type: object
      required:
        - endpoints
    VPNService:
      properties:
        external_v4_ip:
          readOnly: true
          type: string
        router_id:
          format: uuid
          type: string
        status:
          readOnly: true
          type: string
      type: object
    UpdateExternalVpnConnectionSchema:
      properties:
        admin_state_up:
          type: boolean
        description:
          maxLength: 254
          minLength: 3
          type: string
        name:
          maxLength: 64
          minLength: 3
          type: string
        initiator:
          enum:
            - response-only
            - bi-directional
          type: string
          default: bi-directional
        local_endpoint_group:
          $ref: '#/components/schemas/LocalEndpointGroup'
        mtu:
          minimum: 68
          type: integer
        peer_address:
          type: string
        peer_endpoint_group:
          $ref: '#/components/schemas/PeerEndpointGroup'
        peer_id:
          type: string
        psk:
          type: string
      type: object

    DNSDomainSchema:
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 4
          type: string
        status:
          type: string
          readOnly: true
          enum:
            - something
      required:
        - name
        - package_id
      example:
        name: "google.com"
        package_id: "package-id"
    DNSDomainRetrieveSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        package_id:
          type: string
        status:
          type: string
          readOnly: true
          enum:
            - something
        record_count:
          type: integer
        is_subdomain:
          type: boolean
          readOnly: true
        ns_verification:
          type: string
          readOnly: true
    DNSDomainListSchema:
      type: array
      items:
        $ref: '#/components/schemas/DNSDomainRetrieveSchema'

    DNSARecordSchema:
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 1
          type: string
        ttl:
          maxLength: 3
          type: string
        type:
          maxLength: 3
          type: string
        ip_address:
          maxLength: 15
          type: string
        note:
          maxLength: 255
          type: string
      required:
        - name
        - ttl
        - type
        - ip_address
      example:
        name: "@"
        ttl: "10m"
        type: "A"
        ip_address: "1.1.1.1"
    DNSTXTRecordSchema:
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 1
          type: string
        ttl:
          maxLength: 3
          type: string
        type:
          maxLength: 3
          type: string
        content:
          maxLength: 2048
          type: string
        note:
          maxLength: 255
          type: string
      required:
        - name
        - ttl
        - type
        - content
      example:
        name: "@"
        ttl: "10m"
        type: "TXT"
        content: "some content here"
    DNSCNAMERecordSchema:
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 1
          type: string
        ttl:
          maxLength: 3
          type: string
        type:
          maxLength: 3
          type: string
        target:
          type: string
        note:
          maxLength: 255
          type: string
      required:
        - name
        - ttl
        - type
        - target
      example:
        name: "@"
        ttl: "10m"
        type: "CNAME"
        target: "digicloud.ir"
    DNSMXRecordSchema:
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 1
          type: string
        ttl:
          maxLength: 3
          type: string
        type:
          maxLength: 3
          type: string
        mail_server:
          type: string
        priority:
          type: integer
        note:
          maxLength: 255
          type: string
      required:
        - name
        - ttl
        - type
        - mail_server
        - priority
      example:
        name: "@"
        ttl: "10m"
        type: "MX"
        target: "digicloud.ir"
        priority: 56535
    DNSSRVRecordSchema:
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 1
          type: string
        ttl:
          maxLength: 3
          type: string
        type:
          maxLength: 3
          type: string
        port:
          type: integer
        weight:
          type: integer
        proto:
          type: string
          enum: [ _tcp, _udp, _tls ]
        service:
          type: string
        target:
          type: string
        priority:
          type: integer
        note:
          maxLength: 255
          type: string
      required:
        - name
        - ttl
        - type
        - port
        - weight
        - proto
        - service
        - target
        - priority
      example:
        name: "@"
        ttl: "10m"
        type: "SRV"
        port: 8000
        weight: 56535
        proto: "_tcp"
        service: "_digi"
        target: "digicloud.ir"
        priority: 56535
    DNSARecordDetailsSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        ttl:
          type: string
        type:
          type: string
        ip_address:
          type: string
        note:
          maxLength: 255
          type: string
    DNSTXTRecordDetailsSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        ttl:
          type: string
        type:
          type: string
        content:
          type: string
        note:
          maxLength: 255
          type: string
    DNSCNAMERecordDetailsSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        ttl:
          type: string
        type:
          type: string
        target:
          type: string
        note:
          maxLength: 255
          type: string
    DNSMXRecordDetailsSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        ttl:
          type: string
        type:
          type: string
        mail_server:
          type: string
        priority:
          type: integer
        note:
          maxLength: 255
          type: string
    DNSSRVRecordDetailsSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        ttl:
          type: string
        type:
          type: string
        port:
          type: integer
        weight:
          type: integer
        proto:
          type: string
          enum: [ _tcp, _udp, _tls ]
        service:
          type: string
        target:
          type: string
        priority:
          type: integer
        note:
          maxLength: 255
          type: string

    DomainCheckSchema:
      type: object
      properties:
        available:
          type: boolean

    DomainPriceListSchema:
      type: object
      properties:
        data:
          type: object

    DomainRegisterBodySchema:
      type: object
      properties:
        customer_email:
          type: string
        domain:
          type: string
        period:
          type: integer
    DomainNSRecordSchema:
      type: object
      properties:
        digicloud_ns_records:
          type: array
          readOnly: true
          items:
            type: string
    DomainDNSSECSchema:
      type: object
      properties:
        dnssec:
          type: boolean
        ds:
          type: string
          readOnly: true
    DNSRecordListSchema:
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/DNSARecordDetailsSchema'
          - $ref: '#/components/schemas/DNSTXTRecordDetailsSchema'
          - $ref: '#/components/schemas/DNSCNAMERecordDetailsSchema'
          - $ref: '#/components/schemas/DNSMXRecordDetailsSchema'
          - $ref: '#/components/schemas/DNSSRVRecordDetailsSchema'

    BackendSchema:
      properties:
        algorithm:
          enum:
            - round_robin
            - source_ip
          type: string
        created_at:
          readOnly: true
          type: string
        health_checks:
          items:
            $ref: '#/components/schemas/HealthCheckSchema'
          type: array
        id:
          readOnly: true
          type: string
        members:
          items:
            $ref: '#/components/schemas/BackendMemberSchema'
          type: array
        protocol:
          readOnly: true
          type: string
        updated_at:
          readOnly: true
          type: string
        operating_status:
          readOnly: true
          type: string
          description: "one of ONLINE, DRAINING, OFFLINE, DEGRADED, ERROR, NO_MONITOR"
      required:
        - algorithm
      type: object
    BackendMemberSchema:
      properties:
        created_at:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        ip_address:
          type: string
        port:
          maximum: 56535
          minimum: 1
          type: integer
        updated_at:
          readOnly: true
          type: string
        operating_status:
          readOnly: true
          type: string
          description: "one of ONLINE, DRAINING, OFFLINE, DEGRADED, ERROR, NO_MONITOR"
      required:
        - ip_address
        - port
      type: object
    FrontendSchema:
      properties:
        connection_limit:
          minimum: -1
          type: integer
        created_at:
          readOnly: true
          type: string
        default_backend_id:
          description: "null means no default backend for this frontend"
          nullable: true
          default: null
          type: string
        id:
          readOnly: true
          type: string
        port:
          maximum: 56535
          minimum: 1
          type: integer
        protocol:
          readOnly: true
          type: string
        timeout_client_data:
          minimum: 1
          type: integer
        timeout_member_connect:
          minimum: 1
          type: integer
        timeout_member_data:
          minimum: 1
          type: integer
        timeout_tcp_inspect:
          minimum: 1
          type: integer
        updated_at:
          readOnly: true
          type: string
      required:
        - connection_limit
        - default_backend_id
        - port
      type: object
    FrontendUpdateSchema:
      properties:
        default_backend_id:
          description: "One may set this value to null in order to delete a frontend's default backend"
          nullable: true
          type: string
      required:
        - default_backend_id
      type: object
    HealthCheckSchema:
      properties:
        created_at:
          readOnly: true
          type: string
        delay:
          minimum: 1
          type: integer
        id:
          readOnly: true
          type: string
        max_retries:
          maximum: 10
          minimum: 1
          type: integer
        max_retries_down:
          maximum: 10
          minimum: 1
          type: integer
        name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-z]+[a-z0-9_-]*$
          type: string
        timeout:
          minimum: 1
          type: integer
        type:
          readOnly: true
          type: string
        updated_at:
          readOnly: true
          type: string
      required:
        - delay
        - max_retries
        - max_retries_down
        - name
        - timeout
      type: object
    LoadBalancerSchema:
      properties:
        backends:
          items:
            $ref: '#/components/schemas/BackendSchema'
          readOnly: true
          type: array
        created_at:
          readOnly: true
          type: string
        description:
          type: string
        frontends:
          items:
            $ref: '#/components/schemas/FrontendSchema'
          readOnly: true
          type: array
        id:
          readOnly: true
          type: string
        ip_address:
          readOnly: true
          type: string
        name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-z]+[a-z0-9_-]*$
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - PENDING_CREATE
            - ERROR
            - PENDING_DELETE
            - DELETED
            - PENDING_UPDATE
          readOnly: true
        updated_at:
          readOnly: true
          type: string
      required:
        - name
      type: object
    AuditLog:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
        object_type:
          type: string
        object_id:
          type: string
        action_type:
          type: string
        user:
          type: object
          properties:
            id:
              type: string
            first_name:
              type: string
            last_name:
              type: string
            email:
              type: string
        created_at:
          type: string
        object_details:
          type: object
        meta:
          type: object
        changes:
          type: array
          items:
            type: object
            example:
              name: instance_type
              before: g1.large
              after: g1.small
            properties:
              name:
                type: string
                description: "attribute name which has been changed"
              before:
                type: string
                description: "The old value of this attribute before change"
              after:
                type: string
                description: "The new value of this attribute after change"
    EarlyAccessRequestSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        email:
          type: string
        phone:
          type: string
        name:
          type: string
          maxLength: 64
        size:
          type: string
          enum:
            - 2-50
            - 51-100
            - 101-300
            - more
        industry:
          type: string
          enum:
            - other
            - personal
            - insurance
            - oil
            - it
            - power
            - hr
            - media
            - advertise
            - telecom
            - education
            - construction
            - industry
            - real_estate
            - government
            - finance
            - health
            - tourism
            - legal
            - standard
            - banking
            - logistic
            - store
            - car
            - ngo
            - investment
            - restaurant
            - culture_sport
            - goods
            - farming
            - import_export
      required:
        - email
        - phone
        - size
        - industry
        - name
    LocationSchema:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
    BucketSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        access_type:
          type: string
          enum:
            - private
            - public-read
        note:
          type: string
        created_at:
          type: string
          readOnly: true
        updated_at:
          type: string
          readOnly: true
      required:
        - name
        - access_type
    BucketDetailSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        access_type:
          type: string
          enum:
            - private
            - public-read
        note:
          type: string
        usage:
          $ref: '#/components/schemas/BucketDetailUsage'
          readOnly: true
        created_at:
          type: string
          readOnly: true
        updated_at:
          type: string
          readOnly: true
      required:
        - name
        - access_type
    BucketDetailUsage:
      type: object
      properties:
        size:
          type: integer
          readOnly: true
        num_objects:
          type: integer
          readOnly: true
    AccessKeySchema:
      type: object
      properties:
        access_key:
          type: string
          readOnly: true
        access_type:
          type: string
          enum:
            - write
            - read
        created_at:
          type: string
          readOnly: true
        is_approved:
          type: boolean
      required:
        - name
        - access_type
    UpstreamSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        lb_method:
          type: string
          enum:
            - round_robin
            - consistent_ip_hash
        ssl_policy:
          type: string
          enum:
            - http
            - https
        keep_alive:
          type: integer
          minimum: 0
          maximum: 100
        servers:
          $ref: '#/components/schemas/UpstreamServerSchema'
          readOnly: true
        servers_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          readOnly: true
      required:
        - name
        - lb_method
        - ssl_policy
        - keep_alive
    UpstreamServerSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        ip_domain:
          type: string
        port:
          type: integer
          minimum: 1
          maximum: 56535
        weight:
          type: integer
          minimum: 1
          maximum: 100
        fail_timeout:
          type: integer
          minimum: 1
          maximum: 50
        created_at:
          type: string
          readOnly: true
      required:
        - ip_domain
        - port
        - weight
        - fail_timeout
    SSLSchema:
      properties:
        enable:
          type: boolean
        expires_at:
          readOnly: true
          type: string
        hsts:
          type: boolean
        https_redirect:
          type: boolean
        ocsp_check:
          type: boolean
        min_tls_versions:
          type: string
          enum:
            - TLS_1_0
            - TLS_1_1
            - TLS_1_2
            - TLS_1_3
        id:
          readOnly: true
          type: string
        policy:
          type: string
        private_key:
          type: string
          writeOnly: true
        public_key:
          type: string
          writeOnly: true
        type:
          type: string
        updated_at:
          readOnly: true
          type: string
      required:
        - enable
        - hsts
        - https_redirect
        - ocsp_check
        - min_tls_versions
        - policy
        - type
      type: object


    Object:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          enum:
            - custom
        policy:
          type: string
          enum:
            - normal
            - strict
        enable:
          type: boolean
        hsts:
          type: boolean
        https_redirect:
          type: boolean
        ocsp_check:
          type: boolean
        min_tls_versions:
          type: string
          enum:
            - TLS_1_0
            - TLS_1_1
            - TLS_1_2
            - TLS_1_3
        public_key:
          type: string
          maxLength: 13700
          writeOnly: true
        private_key:
          type: string
          maxLength: 13700
          writeOnly: true
        expires_at:
          type: string
          readOnly: true
        update_at:
          type: string
          readOnly: true
    CDNHeadersSchema:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        value:
          type: string
          maxLength: 255
      required:
        - name
        - value
    CDNLocationSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        path:
          type: string
          maxLength: 255
        path_case_sensitive:
          type: boolean
        upstream_id:
          type: string
        origin_headers:
          type: array
          items:
            $ref: '#/components/schemas/CDNHeadersSchema'
        response_headers:
          type: array
          items:
            $ref: '#/components/schemas/CDNHeadersSchema'
        cache_enabled:
          type: boolean
        cache_ttl:
          type: string
          enum:
            - 2m
            - 10m
            - 30m
            - 1h
            - 3h
            - 10h
            - 1d
            - 2d
            - 1w
            - 1M
        cache_key:
          type: string
          enum:
            - u
            - uq
            - uqc
        cache_cookie_name:
          type: string
          maxLength: 255
        cache_zone:
          type: string
          maxLength: 36
        secure_link_enable:
          type: boolean
        secure_link_secret:
          type: string
          maxLength: 255
        redirect_enable:
          type: boolean
        redirect_url:
          type: string
          maxLength: 200
        redirect_status_code:
          type: string
          enum:
            - 301
            - 302
        rate_limit_id:
          type: string
          maxLength: 36
        image_process_id:
          type: string
          maxLength: 36
        update_at:
          type: string
          readOnly: true
      required:
        - name
        - path
        - upstream_id
    CacheZoneSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
    CDNFirewallSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        location_id:
          type: string
        input:
          type: string
          enum:
            - ip
            - asn
            - country
            - continent
        operator:
          type: string
          enum:
            - eq
            - neq
        value:
          type: string
          maxLength: 255
        action:
          type: string
          enum:
            - allow
            - block
            - captcha_challenge
            - javascript_challenge
        priority:
          type: integer
          minimum: 1
        update_at:
          type: string
          readOnly: true
      required:
        - input
        - location_id
        - operator
        - value
        - action
        - priority
    GeneralSettingSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        origin_headers:
          type: array
          items:
            $ref: '#/components/schemas/CDNHeadersSchema'
        response_headers:
          type: array
          items:
            $ref: '#/components/schemas/CDNHeadersSchema'
        developer_mode:
          type: boolean
        maintenance_mode:
          type: boolean
        redirect_to_www:
          type: boolean
        ip_geolocation:
          type: boolean
        intercept_errors:
          type: boolean
        max_upload_size:
          type: integer
          minimum: 1
          maximum: 1000
        custom_host_header:
          type: string
        created_at:
          type: string
          readOnly: true
        update_at:
          type: string
          readOnly: true
    PurgeCacheSchema:
      type: object
      properties:
        url:
          type: string
        method:
          type: string
          enum:
            - GET
            - HEAD
            - OPTIONAL
        cookies:
          type: object
      required:
        - url
    PaginationContainer:
      properties:
        page:
          type: integer
        total:
          type: integer
        count:
          type: integer
    RateLimitSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        exclusion_list:
          type: array
          items:
            type: string
        name:
          type: string
        requests:
          type: integer
          minimum: 1
          maximum: 32767
        burst:
          type: integer
          minimum: 1
          maximum: 32767
        time:
          type: string
          enum:
            - s
            - m
        created_at:
          type: string
          readOnly: true
        update_at:
          type: string
          readOnly: true
    WaterMarkSchema:
      type: object
      properties:
        image_file:
          type: file
        id:
          type: string
          readOnly: true
        domain:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        image:
          type: string
          readOnly: true
    ImageProcessSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        options:
          type: object
          properties:
            valid_sizes:
              type: array
              items:
                type: integer
            valid_qualities:
              type: array
              items:
                type: integer
            enable_watermark:
              type: boolean
    WAFRuleSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        rule_type:
          type: string
          enum: [ package, string ]
        content:
          type: string
          example: coreruleset
        priority:
          type: integer
          example: 1
    SecDefaultAction:
      required:
        - phase_one_log
        - phase_two_log
        - phase_one_auditlog
        - phase_two_auditlog
        - phase_one_action
        - phase_two_action
        - phase_one_status_code
        - phase_two_status_code
      type: object
      properties:
        phase_one_log:
          title: Phase one log
          type: string
          enum:
            - log
            - nolog
        phase_two_log:
          title: Phase two log
          type: string
          enum:
            - log
            - nolog
        phase_one_auditlog:
          title: Phase one auditlog
          type: string
          enum:
            - auditlog
            - noauditlog
        phase_two_auditlog:
          title: Phase two auditlog
          type: string
          enum:
            - auditlog
            - noauditlog
        phase_one_action:
          title: Phase one action
          type: string
          enum:
            - deny
            - redirect
        phase_two_action:
          title: Phase two action
          type: string
          enum:
            - deny
            - redirect
        phase_one_redirect_url:
          title: Phase one redirect url
          description: If action type is redirect, this field will be required.
          type: string
          minLength: 1
        phase_two_redirect_url:
          title: Phase two redirect url
          description: If action type is redirect, this field will be required.
          type: string
          minLength: 1
        phase_one_tag:
          title: Phase one tag
          description: If action type is redirect, this field will be required.
          type: string
          minLength: 1
        phase_two_tag:
          title: Phase two tag
          description: If action type is redirect, this field will be required.
          type: string
          minLength: 1
        phase_one_status_code:
          title: Phase one status code
          type: string
          minLength: 1
        phase_two_status_code:
          title: Phase two status code
          type: string
          minLength: 1
    AnomalyScoreThreshold:
      required:
        - inbound
        - outbound
      type: object
      properties:
        inbound:
          title: Inbound
          type: integer
          minimum: 0
        outbound:
          title: Outbound
          type: integer
          minimum: 0
    WAFRuleConfigSchema:
      required:
        - sec_default_action
        - anomaly_score_threshold
        - exclude_rule_ids
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        sec_default_action:
          $ref: '#/components/schemas/SecDefaultAction'
        paranoia_level:
          title: Paranoia level
          description: Witch paranoia level increases, security level and blocking increase.
          type: integer
          maximum: 4
          minimum: 1
        executing_paranoia_level:
          title: Executing paranoia level
          description: This PL will be executed, but not affect the anomaly scores.
          type: integer
          maximum: 4
          minimum: 1
        enforce_body_processor_urlencoded:
          title: Enforce body processor urlencoded
          description: Force body processor urlencoded if request has not content-type.
          type: boolean
        anomaly_score_threshold:
          $ref: '#/components/schemas/AnomalyScoreThreshold'
        allowed_http_method:
          title: Allowed http method
          description: HTTP methods that a client is allowed to use.
          type: string
          maxLength: 150
          minLength: 1
        allowed_content_type:
          title: Allowed content type
          description: Content-Types that a client is allowed to send in a request.
          type: string
          minLength: 1
        forbidden_file_extensions:
          title: Forbidden file extensions
          description: Forbidden file extensions.
          type: string
          minLength: 1
        forbidden_request_headers:
          title: Forbidden request headers
          description: Forbidden request headers. Header names must be lowercase.
          type: string
          maxLength: 255
          minLength: 1
        allowed_static_extensions:
          title: Allowed static extensions
          description: File extensions considered static files. extensions must be lowercase.
          type: string
          maxLength: 255
          minLength: 1
        content_type_charsets:
          title: Content type charsets
          description: Content-Types charsets that a client is allowed to send in a request.
          type: string
          maxLength: 255
          minLength: 1
        max_number_of_argument:
          title: Max number of argument
          description: Block request if number of arguments is too high.
          type: string
          maxLength: 100
          minLength: 1
        argument_name_length:
          title: Argument name length
          description: Block request if the length of any argument name is too high.
          type: string
          maxLength: 100
          minLength: 1
        argument_value_length:
          title: Argument value length
          description: Block request if the length of any argument value is too high.
          type: string
          maxLength: 100
          minLength: 1
        total_argument_length:
          title: Total argument length
          description: >-
            Block request if the total length of all combined arguments is too
            high.
          type: string
          maxLength: 100
          minLength: 1
        max_file_size:
          title: Max file size
          description: >-
            Block request if the file size of any individual uploaded file is too
            high.
          type: string
          maxLength: 100
          minLength: 1
        combined_file_sizes:
          title: Combined file sizes
          description: >-
            Block request if the total size of all combined uploaded files is too
            high.
          type: string
          maxLength: 100
          minLength: 1
        check_utf_8_encoding:
          title: Check utf 8 encoding
          description: Check request contents for invalid UTF-8 encoding.
          type: boolean
        sampling_percentage_log:
          title: Sampling percentage log
          description: Enable the error log entry in sampling mode.
          type: boolean
        sampling_percentage:
          title: Sampling percentage
          description: How much traffic does WAF affect?
          type: integer
          maximum: 100
          minimum: 1
        exclude_rule_ids:
          type: array
          items:
            type: string
            minLength: 1

    WAFWhitelistSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        ip:
          type: string
          example: "1.1.1.1"
        created_at:
          type: string
          readOnly: true
          format: datetime
        updated_at:
          type: string
          readOnly: true
          format: datetime

    WAFSettingSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        enabled:
          type: boolean

    PackageDomainPackageSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        package_name_en:
          type: string
          readOnly: true
        package_name_fa:
          type: string
          readOnly: true
        description_en:
          type: string
          readOnly: true
        description_fa:
          type: string
          readOnly: true
        max_dns_records:
          type: integer
          readOnly: true
          minimum: 0
        max_firewall_rules:
          type: integer
          readOnly: true
          minimum: 0
        max_origin_headers:
          type: integer
          readOnly: true
          minimum: 0
        max_response_headers:
          type: integer
          readOnly: true
          minimum: 0
        max_upstreams:
          type: integer
          readOnly: true
          minimum: 0
        max_upstream_servers:
          type: integer
          readOnly: true
          minimum: 0
        max_rate_limit_zones:
          type: integer
          readOnly: true
          minimum: 0
        max_page_rules:
          type: integer
          readOnly: true
          minimum: 0
        max_waf_rules:
          type: integer
          readOnly: true
          minimum: 0
        max_waf_whitelist_ips:
          type: integer
          readOnly: true
          minimum: 0
        max_image_resize_qualities:
          type: integer
          readOnly: true
          minimum: 0
        max_image_resize_sizes:
          type: integer
          readOnly: true
          minimum: 0
        max_watermarks:
          type: integer
          readOnly: true
          minimum: 0
        cache_time:
          type: string
          readOnly: true
          enum: [
              2m,
              10m,
              30m,
              1h,
              3h,
              10h,
              1d,
              3d,
              1w,
              1M
          ]
        purge_cache:
          type: boolean
          readOnly: true
        image_resize:
          type: boolean
          readOnly: true
        auto_ssl:
          type: boolean
          readOnly: true
        created_at:
          type: string
          readOnly: true
          format: datetime
        updated_at:
          type: string
          readOnly: true
          format: datetime

    PackageDomainPackageListSchema:
      type: array
      items:
        $ref: '#/components/schemas/PackageDomainPackageSchema'

    UpgradeDomainPackageSchema:
      type: object
      properties:
        package_id:
          type: string

    EdgePackagePriceSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        unit_price:
          type: integer
        created_at:
          type: string
          format: datetime
        package_id:
          type: string
        activated_at:
          type: string
          format: datetime

    DepartmentSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        title_fa:
          type: string
        title_en:
          type: string

    ProductSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        title_fa:
          type: string
        title_en:
          type: string

    SubjectSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        title_fa:
          type: string
        title_en:
          type: string

    TicketSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        title:
          type: string
        department_id:
          type: string
          writeOnly: true
        product_id:
          type: string
          writeOnly: true
        attachment:
          type: string
          format: binary
          writeOnly: true
        subject_id:
          type: string
          writeOnly: true
        department:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/DepartmentSchema'
        product:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/ProductSchema'
        subject:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/SubjectSchema'
        namespace:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
          readOnly: true
        content:
          type: string
        state:
          type: string
          readOnly: true
          enum:
            - WAITING_FOR_RESPONSE
            - HAS_BEEN_ANSWERED
            - CLOSED
            - BLOCKED
        created_at:
          readOnly: true
          type: string

    CommentSchema:
      type: object
      properties:
        id:
          type: string
        content:
          type: string
        attachment:
          type: string
          format: binary
        user:
          type: object
          properties:
            id:
              type: string
            first_name:
              type: string
            last_name:
              type: string
            email:
              type: string
        created_at:
          type: string
        updated_at:
          type: string

    TicketFeedback:
      type: object
      properties:
        state:
          type: string
          enum:
            - LIKE
            - DISLIKE
            - NONE
      required:
        - state

    InstancePriceSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        unit_price:
          type: integer
        created_at:
          type: string
          format: datetime
        region_id:
          type: string
        instance_type_id:
          type: string
    VolumePriceSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        unit_price:
          type: integer
        created_at:
          type: string
          format: datetime
        region_id:
          type: string
        volume_type:
          type: string
    PublicIpPriceSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        unit_price:
          type: integer
        created_at:
          type: string
          format: datetime
        region_id:
          type: string
    VpnConnectionPriceSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        unit_price:
          type: integer
        created_at:
          type: string
          format: datetime
        region_id:
          type: string
        vpn_connection_state:
          type: string
        base_price:
          type: integer
    DiscountSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        percentage:
          type: string
          readOnly: true
        created_at:
          type: string
          format: datetime
          readOnly: true
        region_id:
          type: string
          readOnly: true

    UsageReportSchema:
      type: object
      properties:
        domain_id:
          type: array
          items:
            type: string
        package_id:
          type: array
          items:
            type: string
        instance_id:
          type: array
          items:
            type: string
        instance_name:
          type: array
          items:
            type: string
        instance_report_state:
          type: string
          enum: [ SHELVED, NOT_SHELVED, ALL ]
        instance_type_id:
          type: array
          items:
            type: string
        organization_id:
          type: array
          items:
            type: string
        creator:
          type: array
          items:
            type: string
        public_ip:
          type: array
          items:
            type: string
        volume_type:
          type: array
          items:
            type: string
        snapshot_id:
          type: array
          items:
            type: string
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time

    UsageReportResponseSchema:
      type: object
      properties:
        statis:
          type: string
        id:
          type: string
    NamespaceAccessKeySchema:
      type: object
      properties:
        id:
          type: string
        access_key:
          type: string
        secret_key:
          type: string
    PolicySchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        version:
          type: string
          readOnly: true
        display_name:
          type: string
        statements:
          type: array
          items:
            $ref: '#/components/schemas/PolicyStatementSchema'

    PolicyStatementSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        effect:
          type: string
          enum: [ ALLOW, DENY ]
        actions:
          type: array
          items:
            type: string
        resources:
          type: array
          items:
            type: string
    RequestAnalysisSchema:
      title: RequestAnalysis
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
                format: date-time
              count:
                type: integer
              traffic:
                type: integer
          example:
            - time: "2023-09-12T11:00:00.000Z"
              count: 2040073
              traffic: 27466393446
            - time: "2023-09-12T11:15:00.000Z"
              count: 2022954
              traffic: 27352538931
        total:
          type: object
          properties:
            count:
              type: integer
            traffic:
              type: integer
          example:
            count: 6770401
            traffic: 91448335365

    RequestAnalysisCacheSchema:
      title: RequestAnalysisCache
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
                format: date-time
              cache:
                type: string
              count:
                type: integer
              traffic:
                type: integer
          example:
            - time: "2023-09-12T09:45:00.000Z"
              cache: "HIT"
              count: 1836696
              traffic: 26131487536
            - time: "2023-09-12T09:45:00.000Z"
              cache: "MISS"
              count: 963
              traffic: 37480897
        total:
          type: object
          properties:
            count:
              type: integer
              example: 7071769
            traffic:
              type: integer
              example: 100534488748
          example:
            count: 7071769
            traffic: 100534488748

    RequestAnalysisClientSchema:
      title: RequestAnalysisClient
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
                format: date-time
              count:
                type: integer
          example:
            - time: "2023-09-13T06:15:00.000Z"
              count: 48360
            - time: "2023-09-13T06:30:00.000Z"
              count: 51878
        total:
          type: object
          properties:
            count:
              type: integer
              example: 169337
          example:
            count: 169337

    RequestAnalysisOrganizationSchema:
      title: RequestAnalysisOrganization
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            properties:
              organization:
                type: string
              count:
                type: integer
              traffic:
                type: integer
          example:
            - organization: "Mobile Communication Company of Iran PLC"
              count: 4461955
              traffic: 62242199666
            - organization: "Iran Cell Service and Communication Company"
              count: 3708886
              traffic: 49587840640
        total:
          type: object
          properties:
            count:
              type: integer
              example: 8170841
            traffic:
              type: integer
              example: 111830040306
          example:
            count: 8170841
            traffic: 111830040306

    GeomapCountrySchema:
      type: object
      properties:
        status:
          type: integer
          example: 200
        total:
          type: array
          items:
            type: object
            properties:
              country:
                type: string
                example: "IR"
              count:
                type: integer
                example: 10527751
              traffic:
                type: integer
                example: 131921500542
          example:
            - country: "IR"
              count: 10527751
              traffic: 131921500542
            - country: "DE"
              count: 318583
              traffic: 4771795887

    LogAnalysisStatsSchema:
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: object
          properties:
            count:
              type: integer
              example: 14

    LogAnalysisWafSchema:
      title: LogAnalysisWaf
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            properties:
              organization:
                type: string
              time:
                type: string
                format: date-time
              client_ip:
                type: string
              server:
                type: string
              waf_enabled:
                type: integer
              host:
                type: string
              country:
                type: string
              request_id:
                type: string
              waf_blocked:
                type: integer
              waf_status:
                type: integer
          example:
            - organization: "Afranet"
              time: "2023-09-03T10:14:00.000Z"
              client_ip: "93.113.226.133"
              server: "ir-shm-e01"
              waf_enabled: 1
              host: "www.example.com"
              country: "IR"
              request_id: "df3a7d67cb1a97fcb4c4b7e832453e9d"
              waf_blocked: 1
              waf_status: 433
            - organization: "Afranet"
              time: "2023-09-03T10:14:01.000Z"
              client_ip: "93.113.226.133"
              server: "ir-shm-e01"
              waf_enabled: 1
              host: "www.example.com"
              country: "IR"
              request_id: "ff1f7fee40298532904999a10776b25d"
              waf_blocked: 1
              waf_status: 433
        metadata:
          type: object
          properties:
            page:
              type: integer
              example: 1
            limit:
              type: integer
              example: 2
            total:
              type: integer
              example: 14
            total_pages:
              type: integer
              example: 7
          example:
            page: 1
            limit: 2
            total: 14
            total_pages: 7

    LogAnalysisWaapSchema:
      title: LogAnalysisWaap
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            properties:
              host:
                type: string
              client_ip:
                type: string
              organization:
                type: string
              server:
                type: string
              waap_blocked:
                type: integer
              waap_enabled:
                type: integer
              waap_threshold:
                type: integer
              time:
                type: string
                format: date-time
              country:
                type: string
              request_id:
                type: string
              waap_cause:
                type: string
              waap_score:
                type: integer
          example:
            - host: "www.example.com"
              client_ip: "109.230.81.210"
              organization: "Farabord Dadeh Haye Iranian Co."
              server: "ir-afr-e01"
              waap_blocked: 1
              waap_enabled: 1
              waap_threshold: 1
              time: "2023-09-03T10:14:26.000Z"
              country: "IR"
              request_id: "ef18e49aeac56770b215150b7a682344"
              waap_cause: "blocked by score, cause: bad user agent"
              waap_score: 50
            - host: "www.example.com"
              client_ip: "109.230.81.210"
              organization: "Farabord Dadeh Haye Iranian Co."
              server: "ir-afr-e01"
              waap_blocked: 1
              waap_enabled: 1
              waap_threshold: 1
              time: "2023-09-03T10:14:28.000Z"
              country: "IR"
              request_id: "6e5f6d1799aec1f6154941dbc600bbf9"
              waap_cause: "blocked by score, cause: bad user agent"
              waap_score: 50
        metadata:
          type: object
          properties:
            page:
              type: integer
              example: 1
            limit:
              type: integer
              example: 2
            total:
              type: integer
              example: 14
            total_pages:
              type: integer
              example: 7
          example:
            page: 1
            limit: 2
            total: 14
            total_pages: 7

    LogAnalysisProxyCoreErrorSchema:
      title: LogAnalysisProxyCoreError
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            properties:
              client:
                type: string
              context:
                type: string
              host:
                type: string
              level:
                type: string
              method:
                type: string
              node:
                type: string
              referrer:
                type: string
              server:
                type: string
              time:
                type: string
                format: date-time
              country:
                type: string
              http_version:
                type: string
              message:
                type: string
              pri:
                type: integer
              request_uri:
                type: string
          example:
            - client: "5.119.229.130"
              context: ""
              host: "www.example.com"
              level: "error"
              method: "GET"
              node: "ir-lcs-e02"
              referrer: "https://www.example.com/sw3.js"
              server: "_"
              time: "2023-09-13T07:37:00.210Z"
              country: "IR"
              http_version: "HTTP/2.0"
              message: "attempt to send data on a closed socket"
              pri: 187
              request_uri: "/sw3.js"
            - client: "80.210.32.111"
              context: ""
              host: "www.digikala.com"
              level: "error"
              method: "GET"
              node: "ir-afs-e01"
              referrer: "https://www.example.com/product/blah/blah"
              server: "_"
              time: "2023-09-13T07:37:00.410Z"
              country: "IR"
              http_version: "HTTP/2.0"
              message: "attempt to send data on a closed socket"
              pri: 187
              request_uri: "/_next/static/css/havij.css"
        metadata:
          type: object
          properties:
            page:
              type: integer
              example: 1
            limit:
              type: integer
              example: 2
            total:
              type: integer
              example: 277466
            total_pages:
              type: integer
              example: 138733
          example:
            page: 1
            limit: 2
            total: 277466
            total_pages: 138733
    StateAnalysisStatusCodesSchema:
      title: StateAnalysisStatusCodes
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
                format: date-time
              status:
                type: string
              count:
                type: integer
              traffic:
                type: integer
          example:
            - time: "2023-09-13T09:00:00.000Z"
              status: "200"
              count: 4881295
              traffic: 79564591790
            - time: "2023-09-13T09:00:00.000Z"
              status: "400"
              count: 1154
              traffic: 2492377065
        metadata:
          type: object
          properties:
            page:
              type: integer
              example: 1
            limit:
              type: integer
              example: 2
            total:
              type: object
              properties:
                count:
                  type: integer
                  example: 20134268
                traffic:
                  type: integer
                  example: 286312847602

    StateAnalysisUpstreamStatusCodesSchema:
      title: StateAnalysisUpstreamStatusCodes
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
                format: date-time
              status:
                type: string
              count:
                type: integer
              traffic:
                type: integer
          example:
            - time: "2023-09-13T09:00:00.000Z"
              status: "200"
              count: 4881295
              traffic: 79564591790
            - time: "2023-09-13T09:00:00.000Z"
              status: "400"
              count: 1154
              traffic: 2492377065
        metadata:
          type: object
          properties:
            page:
              type: integer
              example: 1
            limit:
              type: integer
              example: 2
            total:
              type: object
              properties:
                count:
                  type: integer
                  example: 20134268
                traffic:
                  type: integer
                  example: 286312847602

    StateAnalysisResponseTimeSchema:
      title: StateAnalysisResponseTime
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
                format: date-time
              host:
                type: string
              upstream_time_avg:
                type: number
      example:
        status: 200
        data:
          - time: "2023-09-13T09:15:00.000Z"
            host: "www.example.com"
            upstream_time_avg: 0.010855898731769094
          - time: "2023-09-13T09:30:00.000Z"
            host: "www.example.com"
            upstream_time_avg: 0.011224910507637376

    StateAnalysisRequestTimeSchema:
      title: StateAnalysisRequestTime
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
                format: date-time
              host:
                type: string
              request_time_avg:
                type: number
      example:
        status: 200
        data:
          - time: "2023-09-13T09:15:00.000Z"
            host: "www.example.com"
            request_time_avg: 0.12688321781169346
          - time: "2023-09-13T09:30:00.000Z"
            host: "www.example.com"
            request_time_avg: 0.13023719966355754

    DNSCountRequestsSchema:
      title: DNSCountRequests
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
                format: date-time
              domain:
                type: string
              count:
                type: integer
          example:
            - time: "2023-09-13T09:30:00.000Z"
              domain: "www.example.com"
              count: 19325
            - time: "2023-09-13T09:45:00.000Z"
              domain: "www.example.com"
              count: 20406
        total:
          type: object
          properties:
            count:
              type: integer
              example: 57247

    TrafficTotalSchema:
      title: TrafficTotal
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
                format: date-time
                example: "2023-09-13T13:15:00.000Z"
              host:
                type: string
                example: "www.example.com"
              traffic:
                type: integer
                example: 42737096233

    TrafficRequestLengthSchema:
      title: TrafficRequestLength
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
                format: date-time
                example: "2023-09-13T13:15:00.000Z"
              host:
                type: string
                example: "www.example.com"
              traffic:
                type: integer
                example: 779144432

    TrafficSizeSentSchema:
      title: TrafficSizeSent
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
                format: date-time
                example: "2023-09-13T12:45:00.000Z"
              host:
                type: string
                example: "www.example.com"
              traffic:
                type: integer
                example: 33545965835

    TrafficUpstreamTotalSchema:
      title: TrafficUpstreamTotal
      type: object
      properties:
        status:
          type: integer
        data:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
                format: date-time
              host:
                type: string
              traffic:
                type: integer
      example:
        status: 200
        data:
          - time: "2023-09-13T12:30:00.000Z"
            host: "www.example.com"
            traffic: 21824938440
          - time: "2023-09-13T12:15:00.000Z"
            host: "www.example.com"
            traffic: 24323534436

    TrafficUpstreamBytesReceivedSchema:
      title: TrafficUpstreamBytesReceived
      type: object
      properties:
        status:
          type: integer
        data:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
                format: date-time
              host:
                type: string
              traffic:
                type: integer
      example:
        status: 200
        data:
          - time: "2023-09-13T10:30:00.000Z"
            host: "www.example.com"
            traffic: 5639425750
          - time: "2023-09-13T10:15:00.000Z"
            host: "www.example.com"
            traffic: 25796704110

    TrafficUpstreamBytesSentSchema:
      title: TrafficUpstreamBytesSent
      type: object
      properties:
        status:
          type: integer
        data:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
                format: date-time
              host:
                type: string
              traffic:
                type: integer
      example:
        status: 200
        data:
          - time: "2023-09-13T10:30:00.000Z"
            host: "www.example.com"
            traffic: 2630716805
          - time: "2023-09-13T10:15:00.000Z"
            host: "www.example.com"
            traffic: 26594116253

    TimeFramesEnum:
      title: TimeFramesEnumSchema
      enum:
        - 1H
        - 3H
        - 6H
        - 12H
        - 1D
        - 1W
        - 1M
      type: string
      description: An enumeration.

    PipelineInputSchema:
      title: PipelineInputSchema
      required:
        - user_id
        - domain_id
        - domain_name
        - namespace_id
        - pipeline_name
        - source_type_id
        - destination_type_id
      type: object
      properties:
        user_id:
          title: Enter the user id
          type: string
          example: 96e696eab6ba46bd9bdd512e89548d51
        domain_id:
          title: Enter the domain id
          type: string
          example: ed8696eab6ba46bd9bdd512e895483e4
        domain_name:
          title: Enter the domain name
          type: string
          example: www.digikala.com
        namespace_id:
          title: Enter the namespace id
          type: string
          example: b462782d4b39431dbaea1f5223aa6f3c
        pipeline_name:
          title: Enter the pipeline name
          maxLength: 200
          minLength: 1
          type: string
          example: pipeline name A
        source_type_id:
          title: Enter the source type id
          type: string
          example: ed8b43be2e7f42a790e0244c5e2f6c69
        destination_type_id:
          title: Enter the destination type id
          type: string
          example: 7425e596a42a4b9aad30ec3028e41613
        forwarding_destination_type_id:
          title: 'Enter forwarding destination '
          type: string
          example: ee2d588304124b1ca8d103421e9676e2
    PipelineTopicCreatingSchema:
      title: PipelineTopicCreatingSchema
      required:
        - pipeline_id
        - domain_id
        - domain_name
        - topic_name
      type: object
      properties:
        domain_id:
          title: Domain Id
          type: string
          example: cc952c2b-5263-479b-9765-f37dacf2144a
        topic_name:
          title: 'Enter the topic name '
          maxLength: 150
          type: string
          example: topic name
    PipelineTopicExistsSchema:
      title: PipelineTopicExistsSchema
      required:
        - pipeline_id
        - topic_id
      type: object
      properties:
        pipeline_id:
          title: 'Enter the pipeline id '
          type: string
          example: ed8696eab6ba46bd9bdd512e895483e4
        topic_id:
          title: Topic Id
          type: string
    PipelineFluentBitSchema:
      title: PipelineFluentBitSchema
      required:
        - pipeline_id
        - protocol
      type: object
      properties:
        pipeline_id:
          title: 'Enter the pipeline id '
          type: string
          example: ed8696eab6ba46bd9bdd512e895483e4
        regex:
          title: 'Enter the regex '
          type: string
        protocol:
          title: 'Enter the protocol '
          type: string
          example: tcp or udp
    SubmitConnectorSchema:
      title: SubmitConnectorSchema
      required:
        - pipeline_id
      type: object
      properties:
        hot_retention:
          title: The minimum age required to roll over the index in hot stage
          pattern: ^[1-9]*[0-9]*(d|h){1}$
          type: string
          default: 2d
        warm_retention:
          title: The minimum age required to roll over the index in warm stage
          pattern: ^[1-9]*[0-9]*(d|h){1}$
          type: string
          default: 30d
        date_field:
          title: date time field
          type: string
          default: '@timestamp'

    BenthosLogForwarding:
      title: SubmitBenthosSchema
      required:
        - pipeline_id
      type: object
      properties:
        processor:
          type: object
          properties:
            sample_rate:
              default: 100
            domain_names:
              default: [ ]
            fields:
              default: [ ]
        output:
          type: object
          properties:
            destination_bootstrap_servers:
              default: "127.30.10.10:9092"
            destination_topic:
              default: haemd_test

    DruidPreviewSchema:
      title: DruidPreview
      required:
        - pipeline_id
      type: object
      properties:
        processor:
          type: object
          properties:
            sample_rate:
              default: 100
            domain_names:
              default: [ ]
            fields:
              default: [ ]
        output:
          type: object
          properties:
            destination_bootstrap_servers:
              default: "127.30.10.10:9092"
            destination_topic:
              default: haemd_test

    DruidIndexerSchema:
      title: DruidIndexer
      required:
        - pipeline_id
      type: object
      properties:
        processor:
          type: object
          properties:
            sample_rate:
              default: 100
            domain_names:
              default: [ ]
            fields:
              default: [ ]
        output:
          type: object
          properties:
            destination_bootstrap_servers:
              default: "127.30.10.10:9092"
            destination_topic:
              default: haemd_test

    CreatePipeline200:
      example:
        status: 200
        data:
          pipeline:
            id: fb7ed42c09304c128b294e3c7a691e05
            name: ai-test.com_test9
            state: pipeline_created
        message: Pipeline Created
    GetPipelines200:
      example:
        status: 200
        data:
          - id: fb7ed42c09304c128b294e3c7a691e05
            name: ai-test.com_test9
            status: pipeline_created
            topic_id: null
            user_id: d202f72dc41846f192ae68b2de10094f
            namespace_id: 9fe3f8136ae44e0ba3b01667860c5cc7
            fluentbit_id: null
            deleted_status: open
            source_type_id: ed8b43be2e7f42a790e0244c5e2f6c69
            destination_type_id: 5c86ebbbd4804217b1d0da79a35a1b83
            forwarding_destination_type_id: a1c3da30ec364d26a027558e3642b592
            created_at: '2023-09-17T20:16:43.186507+00:00'
            updated_at: '2023-09-17T20:16:43.197400+00:00'
    GetPipeline200:
      example:
        status: 200
        data:
          - id: fb7ed42c09304c128b294e3c7a691e05
            name: ai-test.com_test9
            status: pipeline_created
            topic_id: null
            user_id: d202f72dc41846f192ae68b2de10094f
            namespace_id: 9fe3f8136ae44e0ba3b01667860c5cc7
            fluentbit_id: null
            deleted_status: open
            source_type_id: ed8b43be2e7f42a790e0244c5e2f6c69
            destination_type_id: 5c86ebbbd4804217b1d0da79a35a1b83
            forwarding_destination_type_id: a1c3da30ec364d26a027558e3642b592
            created_at: '2023-09-17T20:16:43.186507+00:00'
            updated_at: '2023-09-17T20:16:43.197400+00:00'
    PipelineSourceTypeList200:
      example:
        status: 200
        data:
          - name: Socket
            id: ed8b43be2e7f42a790e0244c5e2f6c69
          - name: TopicCreating
            id: 581a922827e54f98a6488a2ace57b7f0
          - name: TopicExists
            id: 3a72c0e8e5c84fc4abeef596daa3ad9c
    PipelineDestinationTypeList200:
      example:
        status: 200
        data:
          - name: Socket
            id: ed8b43be2e7f42a790e0244c5e2f6c69
          - name: TopicCreating
            id: 581a922827e54f98a6488a2ace57b7f0
          - name: TopicExists
            id: 3a72c0e8e5c84fc4abeef596daa3ad9c
    PipelineForwardingDestinationTypeList200:
      example:
        status: 200
        data:
          - id: ee2d588304124b1ca8d103421e9676e2
            name: Socket
          - id: c8a263c3d5464c7fa774496f291f7665
            name: Kafka
          - id: a1c3da30ec364d26a027558e3642b592
            name: S3
    TopicCreating200:
      example:
        status: 200
        data:
          pipeline:
            id: 2637e8f0ae7d45ec9e208b2747647df5
            name: ai-test.com_test25
            state: input_phase_completed
          topic:
            id: 09ed318b58bd44af990ca9a6689d38c5
            name: ai-test.com_test69ss
        message: Topic is created and ready
    GetTopics200:
      example:
        status: 200
        data:
          - id: 55f5743a4ca244a6b96e7258892b4abf
            name: www.test.ir_test_druid100
          - id: fd88f9be6e324887ab8e629945e0ecb4
            name: www.test.ir_test_druids222
          - id: a6317cf038ce49f9b846f86625d181c0
            name: www.test.ir_test_druids22
          - id: 2d39b1ec111c413e9e9f66785422a584
            name: www.test.ir_test_druids2
          - id: a8a659c46a1c45e88da57c37ad1c0cbf
            name: www.test.ir_test_druids
          - id: 100a1962e3bc4e7ebf0c182c22b7d93e
            name: www.test.ir_test_druid
    GetTopic200:
      example:
        status: 200
        data:
          name: www.test.ir_test_druid100
          created_at: '2023-09-10T11:51:42.884032+00:00'
          id: 55f5743a4ca244a6b96e7258892b4abf
          updated_at: '2023-09-10T11:51:42.884037+00:00'
          status: CREATED
    CheckMessages200:
      example:
        status: 200
        data:
          pipeline:
            id: 2637e8f0ae7d45ec9e208b2747647df5
            name: ai-test.com_test25
            state: input_phase_completed
          topic:
            id: 09ed318b58bd44af990ca9a6689d38c5
            messages:
              - host: api.test.com
                avg_host: 4325.6
                stdev_host: 390.16
                count_host: 6043
                zscore_host: 4.4
                median_host: 4321
                median_stdev_host: 390.19
                attack_id: ge700
              - host: api.test.com
                avg_host: 4325.6
                stdev_host: 390.16
                count_host: 6043
                zscore_host: 4.4
                median_host: 4321
                median_stdev_host: 390.19
                attack_id: ge700
              - host: api.test.com
                avg_host: 4325.6
                stdev_host: 390.16
                count_host: 6043
                zscore_host: 4.4
                median_host: 4321
                median_stdev_host: 390.19
                attack_id: ge700
              - host: api.test.com
                avg_host: 4325.6
                stdev_host: 390.16
                count_host: 6043
                zscore_host: 4.4
                median_host: 4321
                median_stdev_host: 390.19
                attack_id: ge700
    SetupBenthos200:
      example:
        status_code: 200
        data:
          pipeline:
            id: 29e36bf197b2445d827a03b671f76a8c
            name: test
            state: finish
        message: Benthos setup successfully
    GetLaasJWT200:
      example:
        status: 200
        data:
          token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI5ZmUzZjgxMzZhZTQ0ZTBiYTNiMDE2Njc4NjBjNWNjNyIsImlhdCI6MTY5NTQ2MzEwNywibmJmIjoxNjk1NDYzMTA3LCJleHAiOjE2OTU0NjQ5MDcsInJvbGVzIjoiT1NSZWFkZXJzIiwibmFtZSI6IiJ9.hTTSsLJjptPgoDkJqX4c0X_YEfbdStF6aDNoHT43oSA
        message: The JWT token has been generated successfully

    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        error:
          type: string
          description: A description of the validation error

    ClusterTemplateSchema:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: The name of the cluster template.
        coe:
          type: string
          description: The container orchestration engine.
        coe_version:
          type: string
          description: The version of the container orchestration engine.
        image_id:
          type: string
          description: The ID of the image.
        ssh_key_id:
          type: string
          description: The ID of the SSH key.
        dns_nameservers:
          type: array
          items:
            type: string
          description: List of DNS nameservers.

    NodeGroup:
      type: object
      properties:
        node_type:
          type: string
          description: The type of node.
        node_count:
          type: integer
          description: The count of nodes.
        flavor_id:
          type: string
      description: The ID of the flavor.

    ClusterSchema:
      type: object
      properties:
        id:
          type: string
          description: The ID of the cluster.
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: The name of the cluster.
        cluster_template_id:
          type: string
          description: The ID of the cluster template.
        node_groups:
          type: array
          items:
            $ref: '#/components/schemas/NodeGroup'
          description: List of node groups.
        network_id:
          type: string
          description: The target network id in private network creation.
        subnet_id:
          type: string
          description: The target subnet id in private network creation.
        is_external_network:
          type: boolean
          description: Flag indicating whether the cluster is initiated with an external network.
        cidr:
          type: string
          description: The CIDR of the cluster.
        service_domain:
          type: string
          description: The service domain of the cluster.
        service_cidr:
          type: string
          description: The service CIDR of the cluster.
        dns_nameservers:
          type: array
          items:
            type: string
          description: List of DNS nameservers.
        ingress_enabled:
          type: boolean
          description: Flag indicating whether ingress is enabled or not.

    CoeImageSchema:
      type: object
      properties:
        id:
          type: string
          description: The ID of the COE image.
        name:
          type: string
          description: The name of the COE image.
      required:
        - id
        - name

    CoeSchema:
      type: object
      properties:
        id:
          type: string
          description: The ID of the COE.
        name:
          type: string
          description: The name of the COE.
        version:
          type: string
          description: The version of the COE.
        images:
          type: array
          items:
            $ref: '#/components/schemas/CoeImageSchema'
          description: List of COE images.
      required:
        - name
        - version

  parameters:
    PaginationPage:
      name: page
      in: query
      description: page number
      required: false
      schema:
        type: integer
    PaginationCount:
      name: count
      in: query
      description: count of items in a page
      required: false
      schema:
        type: integer
    FilterQuery:
      name: query
      in: query
      description: a string to use to filter objects
      required: false
      schema:
        type: string
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
      description: >-
        Enter the token with the `Bearer: ` prefix, e.g. "Bearer abcde12345".
